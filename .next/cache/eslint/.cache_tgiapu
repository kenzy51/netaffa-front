[{"C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\@types\\languages.ts":"1","C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\components\\layout\\Footer.tsx":"2","C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\components\\layout\\Header.tsx":"3","C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\components\\layout\\Layout.tsx":"4","C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\components\\pages\\camps\\all-camps\\Item.tsx":"5","C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\components\\pages\\camps\\all-camps\\List.tsx":"6","C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\components\\pages\\camps\\CampForm.tsx":"7","C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\components\\pages\\camps\\SwiperBanner.tsx":"8","C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\components\\pages\\career\\career-list\\CareerItem.tsx":"9","C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\components\\pages\\career\\career-list\\CareerList.tsx":"10","C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\components\\pages\\career\\CareerForm.tsx":"11","C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\components\\pages\\contacts\\Branches.tsx":"12","C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\components\\pages\\contacts\\ContactForm.tsx":"13","C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\components\\pages\\download\\MockItems.tsx":"14","C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\components\\pages\\download\\TopFilters.tsx":"15","C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\components\\pages\\education\\children-clubs\\ChildrenClubForm.tsx":"16","C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\components\\pages\\education\\children-clubs\\Item.tsx":"17","C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\components\\pages\\education\\children-clubs\\List.tsx":"18","C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\components\\pages\\education\\children-clubs\\TopBarFilters.tsx":"19","C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\components\\pages\\education\\sign-language\\Item.tsx":"20","C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\components\\pages\\education\\sign-language\\LessonFilter.tsx":"21","C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\components\\pages\\education\\sign-language\\List.tsx":"22","C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\components\\pages\\education\\sign-language\\SidebarFilter.tsx":"23","C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\components\\pages\\education\\sign-language\\TopBarFilters.tsx":"24","C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\components\\pages\\home\\Capabilities.tsx":"25","C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\components\\pages\\home\\Form.tsx":"26","C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\components\\pages\\home\\Hero.tsx":"27","C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\components\\pages\\home\\Mission.tsx":"28","C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\components\\pages\\home\\ProjectGoals.tsx":"29","C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\components\\pages\\home\\Video.tsx":"30","C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\components\\pages\\medicine\\AnchorLinks.tsx":"31","C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\components\\pages\\medicine\\Item.tsx":"32","C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\components\\pages\\medicine\\List.tsx":"33","C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\components\\pages\\medicine\\MedicineForm.tsx":"34","C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\components\\pages\\news-articles\\ArticleItem.tsx":"35","C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\components\\pages\\news-articles\\Articles.tsx":"36","C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\components\\pages\\news-articles\\Item.tsx":"37","C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\components\\pages\\news-articles\\News.tsx":"38","C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\components\\pages\\news-articles\\NewsArticles.tsx":"39","C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\components\\pages\\psychologics\\PsychologicalForm.tsx":"40","C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\components\\pages\\psychologics\\PsychologicalSupport.tsx":"41","C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\components\\pages\\sponsor\\PartnerSelect.tsx":"42","C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\components\\pages\\sponsor\\PartnershipPrograms.tsx":"43","C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\components\\pages\\sponsor\\ProgramAccordion.tsx":"44","C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\components\\pages\\sponsor\\SponsorForm.tsx":"45","C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\components\\Pagination.tsx":"46","C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\components\\ui\\Accordion.tsx":"47","C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\components\\ui\\Banner.tsx":"48","C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\components\\ui\\Breadcrumb.tsx":"49","C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\components\\ui\\buttons\\DefaultButton.tsx":"50","C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\components\\ui\\DefaultSelect.tsx":"51","C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\components\\ui\\DownloadInput.tsx":"52","C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\components\\ui\\Equalizer\\EqualizerItem.tsx":"53","C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\components\\ui\\Equalizer\\index.tsx":"54","C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\components\\ui\\Equalizer\\LetterItem.tsx":"55","C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\components\\ui\\Equalizer\\SoundEqualizer\\index.tsx":"56","C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\components\\ui\\Equalizer\\SoundEqualizer\\SoundEqualizerItem.tsx":"57","C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\components\\ui\\Equalizer\\SoundEqualizer\\types.ts":"58","C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\components\\ui\\inputs\\Checkbox.tsx":"59","C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\components\\ui\\inputs\\CountrySelectorInput.tsx":"60","C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\components\\ui\\map\\Map.tsx":"61","C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\components\\ui\\Menu.tsx":"62","C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\components\\ui\\Select.tsx":"63","C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\components\\ui\\SeoText.tsx":"64","C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\components\\ui\\Share.tsx":"65","C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\components\\ui\\Video.tsx":"66","C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\hooks\\useIsClient.ts":"67","C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\hooks\\useMediaQuery.ts":"68","C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\lib\\api\\axios.ts":"69","C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\lib\\api\\index.ts":"70","C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\lib\\env.ts":"71","C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\lib\\helpers\\dynamicLocalization.ts":"72","C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\lib\\helpers\\formData.ts":"73","C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\lib\\helpers\\htmlToStr.ts":"74","C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\lib\\helpers\\offsetToPage.ts":"75","C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\lib\\helpers\\passwordGenerator\\helper.ts":"76","C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\lib\\helpers\\passwordGenerator\\index.ts":"77","C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\lib\\helpers\\prettifyNumber\\helper.ts":"78","C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\lib\\helpers\\prettifyNumber\\index.ts":"79","C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\lib\\helpers\\removeUndefined\\helper.ts":"80","C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\lib\\helpers\\removeUndefined\\index.ts":"81","C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\lib\\store\\locations.ts":"82","C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\pages\\404.tsx":"83","C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\pages\\camps\\index.tsx":"84","C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\pages\\career\\index.tsx":"85","C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\pages\\contacts\\index.tsx":"86","C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\pages\\download\\index.tsx":"87","C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\pages\\education\\children-clubs\\index.tsx":"88","C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\pages\\education\\reading\\index.tsx":"89","C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\pages\\education\\sign-language\\index.tsx":"90","C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\pages\\index.tsx":"91","C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\pages\\medicine\\index.tsx":"92","C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\pages\\parents\\index.tsx":"93","C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\pages\\psycho-support\\index.tsx":"94","C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\pages\\sponsor\\index.tsx":"95","C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\pages\\_app.tsx":"96","C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\pages\\_document.tsx":"97","C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\styles\\theme.ts":"98","C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\@types\\common.ts":"99","C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\components\\layout\\consts.ts":"100","C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\components\\ui\\AccordionHeader.tsx":"101","C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\components\\ui\\PageLoader.tsx":"102","C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\components\\ui\\Pagination.tsx":"103","C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\pages\\camps\\[slug].tsx":"104","C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\pages\\career\\[slug].tsx":"105","C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\pages\\education\\children-clubs\\[slug].tsx":"106","C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\pages\\education\\sign-language\\[slug].tsx":"107","C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\pages\\medicine\\article\\[slug].tsx":"108","C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\pages\\medicine\\news\\[slug].tsx":"109","C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\pages\\medicine\\[slug].tsx":"110"},{"size":92,"mtime":1691988199970,"results":"111","hashOfConfig":"112"},{"size":7443,"mtime":1691988199970,"results":"113","hashOfConfig":"112"},{"size":17489,"mtime":1692076097648,"results":"114","hashOfConfig":"112"},{"size":1754,"mtime":1691650210884,"results":"115","hashOfConfig":"112"},{"size":7693,"mtime":1692100733764,"results":"116","hashOfConfig":"112"},{"size":1252,"mtime":1691402732398,"results":"117","hashOfConfig":"112"},{"size":7423,"mtime":1692100746491,"results":"118","hashOfConfig":"112"},{"size":2182,"mtime":1692012371165,"results":"119","hashOfConfig":"112"},{"size":4100,"mtime":1692100746491,"results":"120","hashOfConfig":"112"},{"size":674,"mtime":1692100746491,"results":"121","hashOfConfig":"112"},{"size":9035,"mtime":1691142140077,"results":"122","hashOfConfig":"112"},{"size":7220,"mtime":1691738679974,"results":"123","hashOfConfig":"112"},{"size":7229,"mtime":1692079969462,"results":"124","hashOfConfig":"112"},{"size":1328,"mtime":1691142140077,"results":"125","hashOfConfig":"112"},{"size":2934,"mtime":1691732189099,"results":"126","hashOfConfig":"112"},{"size":6966,"mtime":1692005282771,"results":"127","hashOfConfig":"112"},{"size":6460,"mtime":1691749133359,"results":"128","hashOfConfig":"112"},{"size":1156,"mtime":1691491706673,"results":"129","hashOfConfig":"112"},{"size":1948,"mtime":1691988199976,"results":"130","hashOfConfig":"112"},{"size":4514,"mtime":1691739526128,"results":"131","hashOfConfig":"112"},{"size":3550,"mtime":1691988199976,"results":"132","hashOfConfig":"112"},{"size":998,"mtime":1691402732408,"results":"133","hashOfConfig":"112"},{"size":9687,"mtime":1692100746499,"results":"134","hashOfConfig":"112"},{"size":4352,"mtime":1691988199978,"results":"135","hashOfConfig":"112"},{"size":4957,"mtime":1691988199978,"results":"136","hashOfConfig":"112"},{"size":8611,"mtime":1692100746499,"results":"137","hashOfConfig":"112"},{"size":4328,"mtime":1692092494847,"results":"138","hashOfConfig":"112"},{"size":4791,"mtime":1691988199978,"results":"139","hashOfConfig":"112"},{"size":4887,"mtime":1692075926399,"results":"140","hashOfConfig":"112"},{"size":1010,"mtime":1691576411721,"results":"141","hashOfConfig":"112"},{"size":2776,"mtime":1691732189099,"results":"142","hashOfConfig":"112"},{"size":6062,"mtime":1691732189099,"results":"143","hashOfConfig":"112"},{"size":2188,"mtime":1691988199978,"results":"144","hashOfConfig":"112"},{"size":9802,"mtime":1692100746501,"results":"145","hashOfConfig":"112"},{"size":2264,"mtime":1691749880240,"results":"146","hashOfConfig":"112"},{"size":1981,"mtime":1691142140086,"results":"147","hashOfConfig":"112"},{"size":3532,"mtime":1692100733764,"results":"148","hashOfConfig":"112"},{"size":2096,"mtime":1692100733764,"results":"149","hashOfConfig":"112"},{"size":1824,"mtime":1692100733771,"results":"150","hashOfConfig":"112"},{"size":6800,"mtime":1691737411563,"results":"151","hashOfConfig":"112"},{"size":3763,"mtime":1691750235478,"results":"152","hashOfConfig":"112"},{"size":1526,"mtime":1691988199978,"results":"153","hashOfConfig":"112"},{"size":6041,"mtime":1691988199978,"results":"154","hashOfConfig":"112"},{"size":2483,"mtime":1691142140097,"results":"155","hashOfConfig":"112"},{"size":6659,"mtime":1691733548282,"results":"156","hashOfConfig":"112"},{"size":3831,"mtime":1692100746491,"results":"157","hashOfConfig":"112"},{"size":2590,"mtime":1691650210892,"results":"158","hashOfConfig":"112"},{"size":3089,"mtime":1691142140097,"results":"159","hashOfConfig":"112"},{"size":1675,"mtime":1691750519869,"results":"160","hashOfConfig":"112"},{"size":2537,"mtime":1691142140101,"results":"161","hashOfConfig":"112"},{"size":4701,"mtime":1692100746501,"results":"162","hashOfConfig":"112"},{"size":1551,"mtime":1691732189109,"results":"163","hashOfConfig":"112"},{"size":2411,"mtime":1691142140097,"results":"164","hashOfConfig":"112"},{"size":830,"mtime":1691988199984,"results":"165","hashOfConfig":"112"},{"size":997,"mtime":1691142140097,"results":"166","hashOfConfig":"112"},{"size":2357,"mtime":1692011153334,"results":"167","hashOfConfig":"112"},{"size":5580,"mtime":1691142140097,"results":"168","hashOfConfig":"112"},{"size":145,"mtime":1691142140101,"results":"169","hashOfConfig":"112"},{"size":3835,"mtime":1691650210894,"results":"170","hashOfConfig":"112"},{"size":2817,"mtime":1692100746501,"results":"171","hashOfConfig":"112"},{"size":838,"mtime":1691402732424,"results":"172","hashOfConfig":"112"},{"size":2107,"mtime":1691988199984,"results":"173","hashOfConfig":"112"},{"size":2825,"mtime":1692100746501,"results":"174","hashOfConfig":"112"},{"size":1414,"mtime":1692100746501,"results":"175","hashOfConfig":"112"},{"size":5031,"mtime":1691750117004,"results":"176","hashOfConfig":"112"},{"size":3492,"mtime":1691988199984,"results":"177","hashOfConfig":"112"},{"size":237,"mtime":1691142140106,"results":"178","hashOfConfig":"112"},{"size":820,"mtime":1691142140106,"results":"179","hashOfConfig":"112"},{"size":1897,"mtime":1691142140106,"results":"180","hashOfConfig":"112"},{"size":935,"mtime":1691991809432,"results":"181","hashOfConfig":"112"},{"size":91,"mtime":1691142140115,"results":"182","hashOfConfig":"112"},{"size":461,"mtime":1691988199986,"results":"183","hashOfConfig":"112"},{"size":1091,"mtime":1691142140116,"results":"184","hashOfConfig":"112"},{"size":102,"mtime":1691142140116,"results":"185","hashOfConfig":"112"},{"size":356,"mtime":1691142303986,"results":"186","hashOfConfig":"112"},{"size":328,"mtime":1691142140117,"results":"187","hashOfConfig":"112"},{"size":45,"mtime":1691142140117,"results":"188","hashOfConfig":"112"},{"size":203,"mtime":1691142140117,"results":"189","hashOfConfig":"112"},{"size":43,"mtime":1691142140117,"results":"190","hashOfConfig":"112"},{"size":327,"mtime":1691142140117,"results":"191","hashOfConfig":"112"},{"size":44,"mtime":1691142140117,"results":"192","hashOfConfig":"112"},{"size":1282,"mtime":1691650210894,"results":"193","hashOfConfig":"112"},{"size":124,"mtime":1691142140117,"results":"194","hashOfConfig":"112"},{"size":4156,"mtime":1692100746507,"results":"195","hashOfConfig":"112"},{"size":3802,"mtime":1692100746507,"results":"196","hashOfConfig":"112"},{"size":11576,"mtime":1692079166820,"results":"197","hashOfConfig":"112"},{"size":9290,"mtime":1692077200855,"results":"198","hashOfConfig":"112"},{"size":3952,"mtime":1691998592756,"results":"199","hashOfConfig":"112"},{"size":109,"mtime":1691142140126,"results":"200","hashOfConfig":"112"},{"size":6009,"mtime":1692093396588,"results":"201","hashOfConfig":"112"},{"size":1487,"mtime":1691995600461,"results":"202","hashOfConfig":"112"},{"size":6496,"mtime":1692100733772,"results":"203","hashOfConfig":"112"},{"size":4801,"mtime":1692008453978,"results":"204","hashOfConfig":"112"},{"size":3803,"mtime":1692008453985,"results":"205","hashOfConfig":"112"},{"size":4177,"mtime":1692002649347,"results":"206","hashOfConfig":"112"},{"size":2296,"mtime":1691650210895,"results":"207","hashOfConfig":"112"},{"size":951,"mtime":1691641372922,"results":"208","hashOfConfig":"112"},{"size":861,"mtime":1691987855610,"results":"209","hashOfConfig":"112"},{"size":114,"mtime":1691402732395,"results":"210","hashOfConfig":"112"},{"size":548,"mtime":1691740768021,"results":"211","hashOfConfig":"112"},{"size":2525,"mtime":1691406436970,"results":"212","hashOfConfig":"112"},{"size":1362,"mtime":1691402732418,"results":"213","hashOfConfig":"112"},{"size":2088,"mtime":1691402732418,"results":"214","hashOfConfig":"112"},{"size":10954,"mtime":1692080432530,"results":"215","hashOfConfig":"112"},{"size":5973,"mtime":1692162050787,"results":"216","hashOfConfig":"112"},{"size":10642,"mtime":1692080432123,"results":"217","hashOfConfig":"112"},{"size":13171,"mtime":1692008453978,"results":"218","hashOfConfig":"112"},{"size":5521,"mtime":1691997938509,"results":"219","hashOfConfig":"112"},{"size":5448,"mtime":1691997995334,"results":"220","hashOfConfig":"112"},{"size":8311,"mtime":1691997786064,"results":"221","hashOfConfig":"112"},{"filePath":"222","messages":"223","suppressedMessages":"224","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ob5kps",{"filePath":"225","messages":"226","suppressedMessages":"227","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"228","messages":"229","suppressedMessages":"230","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"231"},{"filePath":"232","messages":"233","suppressedMessages":"234","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"235","messages":"236","suppressedMessages":"237","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"238","messages":"239","suppressedMessages":"240","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"241","messages":"242","suppressedMessages":"243","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"244","messages":"245","suppressedMessages":"246","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"247"},{"filePath":"248","messages":"249","suppressedMessages":"250","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"251","messages":"252","suppressedMessages":"253","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"254","messages":"255","suppressedMessages":"256","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"257","messages":"258","suppressedMessages":"259","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"260","messages":"261","suppressedMessages":"262","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"263"},{"filePath":"264","messages":"265","suppressedMessages":"266","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"267","messages":"268","suppressedMessages":"269","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"270","messages":"271","suppressedMessages":"272","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"273","messages":"274","suppressedMessages":"275","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"276","messages":"277","suppressedMessages":"278","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"279","messages":"280","suppressedMessages":"281","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"282","messages":"283","suppressedMessages":"284","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"285","messages":"286","suppressedMessages":"287","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"288","messages":"289","suppressedMessages":"290","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"291","messages":"292","suppressedMessages":"293","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"294"},{"filePath":"295","messages":"296","suppressedMessages":"297","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"298","messages":"299","suppressedMessages":"300","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"301","messages":"302","suppressedMessages":"303","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"304","messages":"305","suppressedMessages":"306","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"307","messages":"308","suppressedMessages":"309","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"310","messages":"311","suppressedMessages":"312","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"313","messages":"314","suppressedMessages":"315","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"316","messages":"317","suppressedMessages":"318","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"319","messages":"320","suppressedMessages":"321","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"322","messages":"323","suppressedMessages":"324","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"325","messages":"326","suppressedMessages":"327","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"328"},{"filePath":"329","messages":"330","suppressedMessages":"331","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"332","messages":"333","suppressedMessages":"334","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"335","messages":"336","suppressedMessages":"337","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"338","messages":"339","suppressedMessages":"340","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"341","messages":"342","suppressedMessages":"343","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"344","messages":"345","suppressedMessages":"346","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"347","messages":"348","suppressedMessages":"349","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"350","messages":"351","suppressedMessages":"352","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"353"},{"filePath":"354","messages":"355","suppressedMessages":"356","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"357","messages":"358","suppressedMessages":"359","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"360","messages":"361","suppressedMessages":"362","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"363"},{"filePath":"364","messages":"365","suppressedMessages":"366","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"367","messages":"368","suppressedMessages":"369","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"370","messages":"371","suppressedMessages":"372","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"373","messages":"374","suppressedMessages":"375","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"376","messages":"377","suppressedMessages":"378","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"379","messages":"380","suppressedMessages":"381","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"382"},{"filePath":"383","messages":"384","suppressedMessages":"385","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"386","messages":"387","suppressedMessages":"388","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"389","messages":"390","suppressedMessages":"391","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"392","messages":"393","suppressedMessages":"394","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"395","messages":"396","suppressedMessages":"397","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"398","messages":"399","suppressedMessages":"400","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"401","messages":"402","suppressedMessages":"403","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"404","messages":"405","suppressedMessages":"406","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"407","messages":"408","suppressedMessages":"409","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"410"},{"filePath":"411","messages":"412","suppressedMessages":"413","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"414","messages":"415","suppressedMessages":"416","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"417","messages":"418","suppressedMessages":"419","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"420","messages":"421","suppressedMessages":"422","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"423"},{"filePath":"424","messages":"425","suppressedMessages":"426","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"427"},{"filePath":"428","messages":"429","suppressedMessages":"430","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"431","messages":"432","suppressedMessages":"433","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"434","messages":"435","suppressedMessages":"436","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"437","messages":"438","suppressedMessages":"439","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"440"},{"filePath":"441","messages":"442","suppressedMessages":"443","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"444","messages":"445","suppressedMessages":"446","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"447","messages":"448","suppressedMessages":"449","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"450","messages":"451","suppressedMessages":"452","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"453"},{"filePath":"454","messages":"455","suppressedMessages":"456","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"457","messages":"458","suppressedMessages":"459","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"460","messages":"461","suppressedMessages":"462","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"463","messages":"464","suppressedMessages":"465","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"466","messages":"467","suppressedMessages":"468","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"469","messages":"470","suppressedMessages":"471","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"472","messages":"473","suppressedMessages":"474","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"475","messages":"476","suppressedMessages":"477","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"478","messages":"479","suppressedMessages":"480","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"481","messages":"482","suppressedMessages":"483","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"484","messages":"485","suppressedMessages":"486","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"487","messages":"488","suppressedMessages":"489","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"490","messages":"491","suppressedMessages":"492","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"493","messages":"494","suppressedMessages":"495","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"496"},{"filePath":"497","messages":"498","suppressedMessages":"499","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"500","messages":"501","suppressedMessages":"502","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"503","messages":"504","suppressedMessages":"505","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"506"},{"filePath":"507","messages":"508","suppressedMessages":"509","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"510","messages":"511","suppressedMessages":"512","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"513","messages":"514","suppressedMessages":"515","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"516","messages":"517","suppressedMessages":"518","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"519","messages":"520","suppressedMessages":"521","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"522","messages":"523","suppressedMessages":"524","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"525","messages":"526","suppressedMessages":"527","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"528","messages":"529","suppressedMessages":"530","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"531","messages":"532","suppressedMessages":"533","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"534","messages":"535","suppressedMessages":"536","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"537"},{"filePath":"538","messages":"539","suppressedMessages":"540","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"541"},{"filePath":"542","messages":"543","suppressedMessages":"544","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"545","messages":"546","suppressedMessages":"547","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"548","messages":"549","suppressedMessages":"550","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"551","messages":"552","suppressedMessages":"553","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"554","messages":"555","suppressedMessages":"556","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"557","messages":"558","suppressedMessages":"559","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"560","messages":"561","suppressedMessages":"562","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"563","messages":"564","suppressedMessages":"565","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"566","messages":"567","suppressedMessages":"568","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\@types\\languages.ts",[],[],"C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\components\\layout\\Footer.tsx",[],[],"C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\components\\layout\\Header.tsx",["569","570","571","572","573","574"],[],"import React, { useState, useEffect, useRef } from 'react'\nimport styled from 'styled-components'\nimport Image from 'next/image'\nimport { theme } from '@app/styles/theme'\nimport Link from 'next/link'\nimport effafaIcon from 'public/images/svg/effafaIcon.svg'\nimport effafaSmallIcon from 'public/images/svg/effafaMobile.svg'\nimport locationIcon from 'public/images/svg/IconFrame.svg'\nimport arrowIcon from 'public/images/svg/arrows/arrowIcon.svg'\nimport russiaIcon from 'public/images/svg/russia.svg'\nimport engIcon from 'public/images/svg/flags/England.svg'\nimport uzIcon from 'public/images/svg/flags/Uzbek.svg'\nimport Menu from '@app/components/ui/Menu'\nimport { AnimatePresence, motion } from 'framer-motion'\nimport { useLockBodyScroll } from 'react-use'\nimport useMediaQuery from '@app/hooks/useMediaQuery'\nimport { useRouter } from 'next/router'\nimport AccordionHeaderComponent from '@app/components/ui/AccordionHeader'\nimport dropdownIcon from 'public/images/svg/dropdownIcon.svg'\nimport { languages, MenuItemType, variants } from '@app/components/layout/consts'\nimport { dynamicLocalization } from '@app/lib/helpers/dynamicLocalization'\nimport { useLocations } from '@app/lib/store/locations'\nimport { defaultLanguage } from '@app/@types/languages'\nimport Cookies from 'js-cookie'\n\nconst flags = {\n  ru: russiaIcon,\n  en: engIcon,\n  uz: uzIcon,\n}\n\nconst Header = () => {\n  const [cities] = useLocations((state) => [state.cities])\n  const [selectedCity, setSelectedCity] = useState<number | undefined>(Number(Cookies.get('cityId')) || cities?.[0]?.id)\n  const [selectedLanguage, setSelectedLanguage] = useState<string>(Cookies.get('i18nextLng') || defaultLanguage)\n  const [isMenuVisible, setMenuVisible] = useState<boolean>(false)\n  const [showDropdown, setShowDropdown] = useState(false)\n  const [showDropdownLanguage, setShowDropdownLanguage] = useState(false)\n\n  const dropdownRef = useRef<any>(null)\n  useEffect(() => {\n    const handleOutsideClick = (event: any) => {\n      if (dropdownRef.current && !dropdownRef?.current?.contains(event.target)) {\n        setShowDropdown(false)\n        setShowDropdownLanguage(false)\n      }\n    }\n\n    document.addEventListener('mousedown', handleOutsideClick)\n\n    return () => {\n      document.removeEventListener('mousedown', handleOutsideClick)\n    }\n  }, [])\n\n  const lg = useMediaQuery('lg')\n  const isMobile = useMediaQuery('sm')\n  const router = useRouter()\n  const { locale, pathname } = useRouter()\n\n  // useEffect(() => {\n  //   const currentRoute = router.pathname.split('/')[1]\n  //   setActivePage(currentRoute)\n  // }, [router.pathname])\n\n  useEffect(() => {\n    const closeMenu = () => {\n      setMenuVisible(false)\n    }\n    router.events.on('routeChangeStart', closeMenu)\n    return () => {\n      router.events.off('routeChangeStart', closeMenu)\n    }\n  }, [router])\n\n  useLockBodyScroll(isMenuVisible)\n\n  const isLinkActive = (link: string) => {\n    // const linkRoute = link.split('/')[1]\n    // return activePage === linkRoute\n    return pathname.startsWith(link)\n  }\n\n  const toggleMenu = () => setMenuVisible((prev) => !prev)\n\n  const handleSelectClick = () => {\n    setShowDropdown(!showDropdown)\n  }\n\n  const handleCitySelect = (cityId: number) => {\n    setSelectedCity(cityId)\n    Cookies.set('cityId', cityId.toString())\n    setShowDropdown(false)\n  }\n\n  const handleLanguageSelect = (language: any) => {\n    setSelectedLanguage(language)\n    setShowDropdownLanguage(false)\n    Cookies.set('i18nextLng', language)\n    router.replace({ pathname, query: router.query }, router.asPath, { locale: language })\n  }\n\n  const navbarItems: MenuItemType[] = [\n    {\n      id: 1,\n      name: dynamicLocalization('КАРЬЕРА', 'CAREER'),\n      link: '/career',\n    },\n    {\n      id: 9,\n      name: dynamicLocalization('ЛАГЕРЯ', 'CAMPS'),\n      link: '/camps',\n    },\n\n    {\n      id: 2,\n      name: dynamicLocalization('УЧЕБА', 'EDUCATION'),\n      items: [\n        {\n          id: 1,\n          title: dynamicLocalization('Язык жестов', 'Sign language'),\n          link: '/education/sign-language',\n        },\n        {\n          id: 2,\n          title: dynamicLocalization('Кружки', 'Children clubs'),\n          link: '/education/children-clubs',\n        },\n      ],\n    },\n    {\n      id: 3,\n      name: dynamicLocalization('СКАЧАТЬ', 'DOWNLOAD'),\n      link: '/download',\n    },\n    {\n      id: 4,\n      name: dynamicLocalization('СПОНСОРУ', 'TO SPONSOR'),\n      link: '/sponsor',\n    },\n    {\n      id: 5,\n      name: dynamicLocalization('МЕД ОБСЛУЖИВАНИЕ', 'MEDICAL SERVICE'),\n      link: '/medicine',\n    },\n    {\n      id: 8,\n      name: dynamicLocalization('КОНТАКТЫ', 'CONTACTS'),\n      link: '/contacts',\n    },\n  ]\n\n  return (\n    <Wrapper ref={dropdownRef}>\n      <Container>\n        <HeaderContent>\n          {lg && (\n            <BurgerMenu onClick={toggleMenu} isMenuVisible={isMenuVisible}>\n              <span />\n            </BurgerMenu>\n          )}\n          <IconAndCity>\n            <EffafaIconLink href=\"/\">\n              <Image src={isMobile ? effafaSmallIcon : effafaIcon} alt=\"Effafa icon\" />\n            </EffafaIconLink>\n            <CityLink>\n              <CityBlock>\n                <Image src={locationIcon} alt=\"Location icon\" />\n                <SelectContainer>\n                  <SelectButton onClick={handleSelectClick}>\n                    {cities.find((item) => item.id === selectedCity)?.name ||\n                      dynamicLocalization('Выберите город', 'Select city', 'Shaharni tanlang')}{' '}\n                    <Image src={arrowIcon} alt={'arrow'} />\n                  </SelectButton>\n                  {showDropdown && (\n                    <>\n                      <DropdownIcon>\n                        <Image src={dropdownIcon} alt=\"\" />\n                      </DropdownIcon>\n                      <DropdownList>\n                        {cities.map((city) => (\n                          <DropdownItem key={city.id} onClick={() => city.id && handleCitySelect(city.id)}>\n                            {dynamicLocalization(city.name)}\n                          </DropdownItem>\n                        ))}\n                      </DropdownList>\n                    </>\n                  )}\n                </SelectContainer>\n              </CityBlock>\n            </CityLink>\n          </IconAndCity>\n          <HeaderMenu>\n            {navbarItems.map((item: MenuItemType) =>\n              item.items ? (\n                <IsActive key={item.id} active={!!item.items.find((i) => isLinkActive(i.link))}>\n                  <Menu menuItems={item.items}>\n                    {item.link ? (\n                      <Link href={item.link}>\n                        <LinkItem>{item.name}</LinkItem>\n                      </Link>\n                    ) : (\n                      <LinkItem style={{ padding: '10px 14px' }}>{item.name}</LinkItem>\n                    )}\n                  </Menu>\n                </IsActive>\n              ) : (\n                <Link href={item.link || '/'} key={item.id}>\n                  <LinkItem active={isLinkActive(item.link || '')}>{item.name}</LinkItem>\n                </Link>\n              )\n            )}\n          </HeaderMenu>\n          <SelectorLanguage>\n            {!isMobile && <Image alt=\"Icon of flag\" src={flags[locale as keyof typeof flags] || russiaIcon} />}\n            <SelectContainer>\n              <SelectButtonLanguage onClick={() => setShowDropdownLanguage((prev) => !prev)}>\n                {locale\n                  ? locale.charAt(0).toUpperCase() + locale.slice(1)\n                  : selectedLanguage.charAt(0).toUpperCase() + selectedLanguage.slice(1)}\n                <Image src={arrowIcon} alt={'arrow'} />\n              </SelectButtonLanguage>\n              {showDropdownLanguage && (\n                <>\n                  <DropdownIconLanguage>\n                    <Image src={dropdownIcon} alt=\"\" />\n                  </DropdownIconLanguage>\n                  <DropdownList>\n                    {languages.map((language) => (\n                      <LanguageItem key={language.id} onClick={() => handleLanguageSelect(language.name)}>\n                        <Image src={language.icon} alt={'icon'} />\n                        {language.name.charAt(0).toUpperCase() + language.name.slice(1)}\n                      </LanguageItem>\n                    ))}\n                  </DropdownList>\n                </>\n              )}\n            </SelectContainer>\n            <AnimatePresence>\n              {lg && (\n                <MobileMenu animate={isMenuVisible ? 'open' : 'closed'} variants={variants} initial={{ x: '-100%' }}>\n                  <MobileCityBlock>\n                    <Image src={locationIcon} alt=\"Location icon\" />\n                    <SelectContainer>\n                      <SelectButton onClick={handleSelectClick}>\n                        {cities.find((item) => item.id === selectedCity)?.name ||\n                          dynamicLocalization('Выберите город', 'Select city', 'Shaharni tanlang')}{' '}\n                        <Image src={arrowIcon} alt={'arrow'} />\n                      </SelectButton>\n                      {showDropdown && (\n                        <div>\n                          <DropdownIcon>\n                            <Image src={dropdownIcon} alt=\"\" />\n                          </DropdownIcon>\n                          <DropdownList>\n                            {cities.map((city) => (\n                              <DropdownItem key={city.id} onClick={() => city.id && handleCitySelect(city.id)}>\n                                {city.name}\n                              </DropdownItem>\n                            ))}\n                          </DropdownList>\n                        </div>\n                      )}\n                    </SelectContainer>\n                  </MobileCityBlock>\n                  <MobileMenuList>\n                    <InnerMobile>\n                      {navbarItems.map((item: MenuItemType) => (\n                        <React.Fragment key={item.id}>\n                          {item.items ? (\n                            <AccordionHeaderComponent\n                              label={item.name}\n                              styles={{\n                                labelStyles: {\n                                  fontWeight: 600,\n                                  color: theme.colors.dark,\n                                },\n                              }}\n                              fontSize=\"14px\"\n                              marginBottom=\"20px\"\n                            >\n                              <MobileSubMenu>\n                                {item.items.map((subItem: MenuItemType | any) => (\n                                  <Link href={subItem.link} key={subItem.id}>\n                                    <MobileMenuItem>{subItem.title}</MobileMenuItem>\n                                  </Link>\n                                ))}\n                              </MobileSubMenu>\n                            </AccordionHeaderComponent>\n                          ) : (\n                            <Link href={item.link || '/'} key={item.id}>\n                              <MobileMenuItem>{item.name}</MobileMenuItem>\n                            </Link>\n                          )}\n                        </React.Fragment>\n                      ))}\n                    </InnerMobile>\n                  </MobileMenuList>\n                </MobileMenu>\n              )}\n            </AnimatePresence>\n          </SelectorLanguage>\n        </HeaderContent>\n      </Container>\n    </Wrapper>\n  )\n}\nconst MobileSubMenu = styled(motion.div)`\n  margin-top: 8px;\n  padding: 8px;\n`\nconst Wrapper = styled.header`\n  top: 0;\n  left: 0;\n  position: relative;\n  z-index: 3000;\n  padding-bottom: 10px;\n\n  ${theme.mqMax('lg')} {\n    padding-top: 10px;\n  }\n`\nconst Container = styled.div`\n  max-width: ${theme.containers.main};\n  margin: 0 auto;\n  width: 100%;\n  padding-top: 24px;\n  z-index: 100;\n  ${theme.mqMax('xl')} {\n    padding: 0 25px;\n  }\n`\nconst EffafaIconLink = styled(Link)`\n  display: flex;\n  justify-content: center;\n\n  ${theme.mqMax('lg')} {\n    width: 100%;\n    transform: scale(0.95);\n    margin-left: 51.5px;\n  }\n  ${theme.mqMax('sm')} {\n    margin-left: 50px;\n  }\n`\nconst HeaderContent = styled.div`\n  display: flex;\n  align-items: center;\n`\nconst IconAndCity = styled.div`\n  width: 100%;\n  display: flex;\n  align-items: center;\n  gap: 10px;\n\n  ${theme.mqMax('md')} {\n    flex-basis: 100%;\n    justify-content: center;\n    margin-bottom: 20px;\n  }\n`\nconst InnerMobile = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: flex-start;\n`\nconst CityLink = styled.div`\n  flex-grow: 1;\n`\nconst CityBlock = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 12px 0;\n  margin-left: 29px;\n  ${theme.mqMax('md')} {\n    justify-content: center;\n  }\n  ${theme.mqMax('lg')} {\n    display: none;\n  }\n`\nconst MobileCityBlock = styled(CityBlock)`\n  display: flex;\n  margin: 0 auto;\n`\nconst HeaderMenu = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 20px;\n  margin: 0 20px;\n  /* 1600 */\n  ${theme.mqMax('xxl2')} {\n    flex-wrap: wrap;\n    width: 1300px;\n  }\n  /* 1200 */\n  ${theme.mqMax('xl')} {\n    gap: 10px;\n  }\n  /* 992 */\n  ${theme.mqMax('lg')} {\n    display: none;\n  }\n`\nconst LinkItem = styled.h4<{ active?: boolean }>`\n  font-family: 'Oswald', sans-serif;\n  font-style: normal;\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 16px;\n  white-space: nowrap;\n  display: flex;\n  justify-content: center;\n  &:after {\n    content: '';\n    display: ${(props: any) => (props.active ? 'block' : 'none')};\n    width: 5px;\n    height: 5px;\n    background-color: ${theme.colors.primary};\n    border-radius: 50%;\n    position: absolute;\n    margin-top: 26px;\n  }\n  ${theme.mqMax('lg')} {\n    margin-bottom: 20px;\n    margin-left: 2%;\n  }\n`\n\nconst IsActive = styled.div<{ active?: boolean }>`\n  display: flex;\n  justify-content: center;\n  &:after {\n    content: '';\n    display: ${(props: any) => (props.active ? 'block' : 'none')};\n    width: 5px;\n    height: 5px;\n    background-color: ${theme.colors.primary};\n    border-radius: 50%;\n    position: absolute;\n    bottom: 28px;\n    ${theme.mqMax('xxl2')} {\n      bottom: 46px;\n    }\n    ${theme.mqMax('xl')} {\n      bottom: 41px;\n    }\n  }\n`\n\nconst SelectorLanguage = styled.div`\n  width: 77px;\n  display: flex;\n  align-items: center;\n  padding: 12px 0;\n  margin-left: 40px;\n  ${theme.mqMax('xl')} {\n    margin-left: 20px;\n  }\n  ${theme.mqMax('md')} {\n  }\n`\nconst BurgerMenu = styled.div<{ isMenuVisible: boolean }>`\n  position: relative;\n  cursor: pointer;\n  height: 16px;\n  min-width: 23px;\n  display: flex;\n  align-items: center;\n  span {\n    display: ${(p) => (p.isMenuVisible ? 'none' : 'block')};\n    height: 2px;\n    width: 100%;\n    background-color: ${theme.colors.primary};\n  }\n  &:before,\n  &:after {\n    content: '';\n    position: absolute;\n    left: 0;\n    width: 23px;\n    height: 2px;\n    background-color: ${theme.colors.primary};\n    transition: transform 0.2s ease;\n  }\n  &:before {\n    transform: ${(p) => (p.isMenuVisible ? 'rotate(45deg)' : 'rotate(0)')};\n    top: 0;\n  }\n  &:after {\n    transform: ${(p) => (p.isMenuVisible ? 'rotate(-45deg)' : 'rotate(0)')};\n    bottom: ${(p) => (!p.isMenuVisible ? 0 : 'initial')};\n    top: ${(p) => (p.isMenuVisible ? 0 : 'initial')};\n  }\n`\n\nconst MobileMenu = styled(motion.div)`\n  position: absolute;\n  top: 100%;\n  left: 0;\n  width: 100%;\n  height: 100vh;\n  background: #f8f8f8;\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  text-align: center;\n`\nconst MobileMenuList = styled.ul`\n  margin: 0 auto;\n`\nconst MobileMenuItem = styled(LinkItem)`\n  font-family: 'Oswald', sans-serif;\n  font-style: normal;\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 16px;\n  text-transform: uppercase;\n  color: ${theme.colors.dark};\n`\nconst DropdownIcon = styled.div`\n  position: absolute;\n  top: 28px;\n  left: 40px;\n`\nconst DropdownIconLanguage = styled.div`\n  position: absolute;\n  top: 28px;\n  left: 10px;\n`\nconst DropdownList = styled.ul`\n  top: 100%;\n  position: absolute;\n  left: -30px;\n  width: 100%;\n  max-height: 200px;\n  overflow-y: auto;\n  background: white;\n  border-top: none;\n  z-index: 10;\n  border-radius: 5px;\n  padding: 2px;\n`\n\nconst DropdownItem = styled.li`\n  padding: 6px 11px;\n  cursor: pointer;\n  border-radius: 5px;\n  transition: background-color 0.2s ease-in-out;\n\n  &:hover {\n    background: var(--grey, #e6e6e6);\n  }\n`\nconst SelectContainer = styled.div`\n  position: relative;\n`\nconst SelectButton = styled.button`\n  width: 160px;\n  height: 37px;\n  display: flex;\n  padding: 6px 11px;\n  font-size: 16px;\n  align-items: center;\n  gap: 5px;\n  align-self: stretch;\n  border-radius: 5px;\n  transition: border-color 0.3s ease-in-out;\n  cursor: pointer;\n`\nconst SelectButtonLanguage = styled.button`\n  width: 104px;\n  height: 37px;\n  display: flex;\n  padding: 6px 11px;\n  font-size: 16px;\n  align-items: center;\n  gap: 5px;\n  align-self: stretch;\n  border-radius: 5px;\n  transition: border-color 0.3s ease-in-out;\n  cursor: pointer;\n`\nconst LanguageItem = styled.div`\n  display: flex;\n  gap: 5px;\n  align-items: center;\n  padding: 6px 11px;\n  cursor: pointer;\n  border-radius: 5px;\n  transition: background-color 0.2s ease-in-out;\n\n  &:hover {\n    background: var(--grey, #e6e6e6);\n  }\n`\n\nexport default Header\n","C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\components\\layout\\Layout.tsx",[],[],"C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\components\\pages\\camps\\all-camps\\Item.tsx",[],["575"],"C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\components\\pages\\camps\\all-camps\\List.tsx",[],[],"C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\components\\pages\\camps\\CampForm.tsx",[],[],"C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\components\\pages\\camps\\SwiperBanner.tsx",["576","577"],["578"],"import React, { useRef } from 'react'\nimport { Swiper, SwiperSlide } from 'swiper/react'\nimport { Navigation, Pagination } from 'swiper/modules'\nimport 'swiper/css'\nimport 'swiper/css/navigation'\nimport 'swiper/css/pagination'\nimport prevPicture from 'public/images/svg/prevPicture.svg'\nimport nextPicture from 'public/images/svg/nextSlider.svg'\nimport styled from 'styled-components'\nimport Image from 'next/image'\nimport { theme } from '@app/styles/theme'\nimport useMediaQuery from '@app/hooks/useMediaQuery'\n\nconst SwiperBanner = ({ banners }: any) => {\n  const isMedium = useMediaQuery('md')\n  const prevRef = useRef(null)\n  const nextRef = useRef(null)\n  return (\n    <>\n      <Swiper\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        cssMode={true}\n        navigation={{\n          prevEl: prevRef.current,\n          nextEl: nextRef.current,\n        }}\n        pagination={{ clickable: true }}\n        keyboard={true}\n        modules={[Navigation, Pagination]}\n        className=\"mySwiper\"\n      >\n        {banners.map((banner: any) => (\n          <SwiperSlide key={banner.id}>\n            <ImageBanner src={banner.banner} alt={`Banner ${banner.id}`} />\n          </SwiperSlide>\n        ))}\n      </Swiper>\n      {!isMedium && (\n        <Buttons>\n          <div ref={prevRef}>\n            <Image src={prevPicture} alt=\"picture\" width={80} height={80} />\n          </div>\n          <div ref={nextRef}>\n            <Image src={nextPicture} alt=\"picture\" width={80} height={80} />\n          </div>\n        </Buttons>\n      )}\n    </>\n  )\n}\n\nconst { mqMax } = theme\n\nconst ImageBanner = styled.img<{ banner?: string }>`\n  width: 100%;\n  height: 500px;\n  background-image: ${({ banner }) => `url(${banner})`};\n  background-position: center center;\n  background-repeat: no-repeat;\n  background-size: cover;\n\n  ${mqMax('md')} {\n    height: 200px;\n  }\n\n  ${mqMax('md')} {\n    height: 130px;\n  }\n`\n\nconst Buttons = styled.div`\n  position: relative;\n  top: -290px;\n  left: 0;\n  right: 0;\n  z-index: 1;\n  display: flex;\n  justify-content: space-between;\n  padding: 0 20px;\n\n  div {\n    cursor: pointer;\n  }\n`\n\nexport default SwiperBanner\n","C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\components\\pages\\career\\career-list\\CareerItem.tsx",[],[],"C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\components\\pages\\career\\career-list\\CareerList.tsx",[],[],"C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\components\\pages\\career\\CareerForm.tsx",[],[],"C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\components\\pages\\contacts\\Branches.tsx",[],[],"C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\components\\pages\\contacts\\ContactForm.tsx",["579"],[],"import { CSSProperties, useRef } from 'react'\nimport styled from 'styled-components'\nimport Image from 'next/image'\nimport useMediaQuery from '@app/hooks/useMediaQuery'\nimport { theme } from '@app/styles/theme'\nimport DefaultButton from '@app/components/ui/buttons/DefaultButton'\nimport { formDataHttp } from '@app/lib/helpers/formData'\nimport { ConsultationFormTypeEnum } from '@app/lib/api/gen/api'\nimport Link from 'next/link'\nimport { useFormik } from 'formik'\nimport * as yup from 'yup'\nimport Woman from 'public/images/png/womanExplains.png'\nimport EffafaBoys from 'public/images/png/effafaChildren.png'\nimport { toast } from 'react-toastify'\nimport Checkbox from '@app/components/ui/inputs/Checkbox'\nimport { ReactNode } from 'react'\nimport CountrySelectorInput from '@app/components/ui/inputs/CountrySelectorInput'\nimport { useTranslation } from 'next-i18next'\n\ninterface IWhoCheckbox {\n  label: string\n  value: ConsultationFormTypeEnum\n}\n\nconst validationSchema = yup.object({\n  full_name: yup.string().required('Обязательное поле'),\n  phone_number: yup.string().required('Обязательное поле'),\n  email: yup.string().email('Неверный формат').required('Обязательное поле'),\n  message: yup.string().required('Обязательное поле'),\n})\n\ninterface IChildren {\n  children?: ReactNode\n}\n\nconst ContactForm = ({ children }: IChildren) => {\n  const xl = useMediaQuery('xl')\n  const formik = useFormik({\n    initialValues: {\n      type: 'sponsor',\n      full_name: '',\n      phone_number: '',\n      email: '',\n      video: null,\n      message: '',\n    },\n    onSubmit: async (values) => {\n      await toast.promise(formDataHttp(values, '/contacts/consultation_forms/', 'POST'), {\n        pending: 'Загрузка...',\n        success: 'Успех!',\n        error: 'Ошибочка...',\n      })\n      formik.resetForm()\n    },\n    validationSchema,\n  })\n  const { t } = useTranslation('forms')\n  const { t: tButton } = useTranslation('buttons')\n  const { full_name, phone_number, email, message } = formik.values\n  const { current: whoCheckboxes } = useRef<IWhoCheckbox[]>([\n    {\n      label: t('sponsor'),\n      value: 'sponsor',\n    },\n    {\n      label: t('parent'),\n      value: 'parent',\n    },\n    {\n      label: t('child'),\n      value: 'children',\n    },\n  ])\n\n  return (\n    <Section>\n      <Container>\n        {!xl && (\n          <LeftImage>\n            <Image src={EffafaBoys} alt=\"boy\" width={570} height={1000} />\n          </LeftImage>\n        )}\n        <Form onSubmit={formik.handleSubmit}>\n          <Title>\n            {t('sign')}\n            <br />\n            {t('onConsultation')}\n          </Title>{' '}\n          <FormContent>\n            <CheckBoxes>\n              {whoCheckboxes.map(({ label, value }) => (\n                <Checkbox\n                  value={value}\n                  onChange={(e) => formik.setFieldValue('type', e.target.value)}\n                  label={label}\n                  checked={formik.values.type === value}\n                  styles={{\n                    text: {\n                      fontWeight: 400,\n                      fontSize: 16,\n                    },\n                  }}\n                  key={value}\n                />\n              ))}\n            </CheckBoxes>\n            <Input onChange={formik.handleChange} value={full_name} name=\"full_name\" placeholder={t('name')} />\n            <CountrySelectorInput formik={formik} phone_number={phone_number} />\n            <Input onChange={formik.handleChange} value={email} name=\"email\" placeholder={t('email')} />\n            <Textarea onChange={formik.handleChange} value={message} name=\"message\" placeholder={t('messageText')} />\n            {!!Object.values(formik.errors).length && formik.touched.full_name && (\n              <ErrorText>Заполните все поля верно!</ErrorText>\n            )}\n            <BtnWrapper>\n              <DefaultButton type=\"submit\">{tButton('send')}</DefaultButton>\n            </BtnWrapper>\n            <Consent>\n              {t('privacyPolicy')}\n              <br />\n              {t('privacyPolicy2')}\n              <Link href=\"/\">{t('privacyPolicyButton')}</Link>\n            </Consent>\n          </FormContent>\n        </Form>\n        {!xl && (\n          <RightImage>\n            <Image src={Woman} alt=\"girl\" width={570} height={1000} />\n          </RightImage>\n        )}\n      </Container>\n    </Section>\n  )\n}\n\nconst { colors, mqMax } = theme\nconst Section = styled.section`\n  padding-bottom: 90px;\n  ${mqMax('sm')} {\n    padding-bottom: 40px;\n  }\n`\nconst Container = styled.div`\n  max-width: 1920px;\n  margin: 0 auto;\n  display: flex;\n`\nconst LeftImage = styled.div`\n  img {\n    max-width: 610px;\n    width: 100%;\n    border-radius: 500px;\n    overflow: hidden;\n    object-fit: cover;\n  }\n`\nconst Form = styled.form`\n  background: ${colors.white};\n  border-radius: 500px;\n  padding: 79px 142px;\n  ${mqMax('xl')} {\n    flex: 1;\n  }\n  ${mqMax('md')} {\n    padding: 59px 34px;\n  }\n  ${mqMax('md')} {\n    padding: 59px 13px;\n    border-radius: 200px;\n  }\n`\nconst Title = styled.h2`\n  font-family: 'Roboto', sans-serif;\n  font-style: normal;\n  font-weight: 700;\n  font-size: 54px;\n  line-height: 62px;\n  letter-spacing: -0.27px;\n  text-align: center;\n  color: ${colors.gray_900};\n  margin-bottom: 20px;\n  span {\n    display: block;\n  }\n  ${mqMax('md')} {\n    font-size: 24px;\n    line-height: 26px;\n    width: 95%;\n  }\n`\nconst FormContent = styled.div`\n  padding: 0 31.5px;\n`\nconst CheckBoxes = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 15px;\n  ${mqMax('md')} {\n    flex-direction: column;\n    row-gap: 15px;\n    margin-bottom: 20px;\n  }\n`\nconst Input = styled.input<{ customStyle?: CSSProperties }>`\n  display: block;\n  font-family: 'Roboto', sans-serif;\n  font-style: normal;\n  font-weight: 400;\n  font-size: 18px;\n  line-height: 28px;\n  color: ${colors.gray_200};\n  border-bottom: 1px solid ${colors.gray_200};\n  padding: 13px 0;\n  width: 100%;\n  ${(p) => p.customStyle as never}\n  margin-bottom: 10px;\n  ${mqMax('md')} {\n    font-size: 14px;\n    margin-bottom: 20px;\n  }\n  &:focus-within {\n    border-bottom: 1px solid ${colors.primary};\n    outline: none;\n  }\n`\nconst Textarea = styled.textarea`\n  display: block;\n  width: 100%;\n  height: 176px;\n  border: 1px solid ${colors.gray_200};\n  margin: 15px 0 20px;\n  padding: 12px 16px;\n  font-family: 'Roboto', sans-serif;\n  font-style: normal;\n  font-weight: 400;\n  font-size: 18px;\n  line-height: 28px;\n  color: ${colors.gray_200};\n  &:focus-within {\n    border: 1px solid ${colors.primary};\n    outline: none;\n  }\n`\nconst ErrorText = styled.h6`\n  color: red;\n  font-size: 14px;\n  margin-bottom: 10px;\n`\nconst BtnWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  width: 100%;\n  margin-bottom: 20px;\n`\nconst Consent = styled.p`\n  font-family: 'Roboto', sans-serif;\n  font-style: normal;\n  font-weight: 400;\n  font-size: 14px;\n  line-height: 150%;\n  text-align: center;\n  color: ${colors.gray_900};\n\n  ${mqMax('md')} {\n    font-size: 11px;\n  }\n  a {\n    color: ${colors.primary};\n    display: block;\n  }\n`\n\nconst RightImage = styled(LeftImage)``\n\nexport default ContactForm\n","C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\components\\pages\\download\\MockItems.tsx",[],[],"C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\components\\pages\\download\\TopFilters.tsx",[],[],"C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\components\\pages\\education\\children-clubs\\ChildrenClubForm.tsx",[],[],"C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\components\\pages\\education\\children-clubs\\Item.tsx",[],[],"C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\components\\pages\\education\\children-clubs\\List.tsx",[],[],"C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\components\\pages\\education\\children-clubs\\TopBarFilters.tsx",[],[],"C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\components\\pages\\education\\sign-language\\Item.tsx",[],[],"C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\components\\pages\\education\\sign-language\\LessonFilter.tsx",[],[],"C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\components\\pages\\education\\sign-language\\List.tsx",[],[],"C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\components\\pages\\education\\sign-language\\SidebarFilter.tsx",["580"],[],"import React, { useState } from 'react'\r\nimport Accordion from '@app/components/ui/Accordion'\r\nimport { Category, EducationCategoriesList200Response } from '@app/lib/api/gen'\r\nimport styled, { keyframes } from 'styled-components'\r\nimport Checkbox from '@app/components/ui/inputs/Checkbox'\r\nimport { useRouter } from 'next/router'\r\nimport { theme } from '@app/styles/theme'\r\nimport useMediaQuery from '@app/hooks/useMediaQuery'\r\nimport InlineSVG from 'react-inlinesvg'\r\nimport CrossIcon from 'public/images/svg/crosses/white-cross.svg'\r\nimport { useLockBodyScroll } from 'react-use'\r\nimport Image from 'next/image'\r\nimport { useTranslation } from 'next-i18next'\r\n\r\ninterface ISidebarFilterProps {\r\n  categories?: EducationCategoriesList200Response\r\n  onToggleMobileMenu: () => void\r\n  mobileOpen: boolean\r\n  onClickCategory: (categoryIds: any[]) => void\r\n}\r\n\r\nconst SidebarFilter = (props: ISidebarFilterProps) => {\r\n  const { categories, onToggleMobileMenu, mobileOpen } = props\r\n  const { query, replace } = useRouter()\r\n  const [hoveredCategoryId, setHoveredCategoryId] = useState<number | null>(null)\r\n  const [selectedCategories, setSelectedCategories] = React.useState<string[]>([])\r\n  const [checkedBox, setCheckedbox] = useState(false)\r\n  const lg = useMediaQuery('lg')\r\n  const category = query.category || ''\r\n  const categoriesQuery = category ? (category as string).split(',') : []\r\n\r\n  useLockBodyScroll(lg && mobileOpen)\r\n\r\n  const changeCategoryHandler = (e: React.ChangeEvent<HTMLInputElement>, id?: string) => {\r\n    const { checked } = e.target\r\n\r\n    let newCategories: string[]\r\n    if (checked) {\r\n      newCategories = [...categoriesQuery]\r\n      if (id) {\r\n        newCategories.push(id)\r\n        const category = categories?.results?.find((item) => item.id === +id)\r\n        const childrenIds =\r\n          category?.children?.map((child) => (child as never as Category).id).filter((item) => item) || []\r\n        newCategories.push(...(childrenIds as never as string[]))\r\n      }\r\n    } else {\r\n      newCategories = categoriesQuery.filter((item) => item !== id)\r\n      if (id) {\r\n        const category = categories?.results?.find((item) => item.id === +id)\r\n        const childrenIds = category?.children?.map((child) => (child as never as Category).id) || []\r\n        newCategories = newCategories.filter((item) => !childrenIds.includes(+item))\r\n      }\r\n      props.onClickCategory(newCategories)\r\n    }\r\n\r\n    const newQuery = newCategories.join(',')\r\n\r\n    replace({\r\n      query: {\r\n        ...query,\r\n        category: newQuery,\r\n        page: 1,\r\n      },\r\n    })\r\n  }\r\n\r\n  const resetSelectedCategories = () => {\r\n    setSelectedCategories([])\r\n    replace({ query: { ...query, category: '' } })\r\n  }\r\n\r\n  const showPicturehover = () => {\r\n    setCheckedbox((prev) => !prev)\r\n  }\r\n\r\n  selectedCategories\r\n  const { t } = useTranslation('buttons')\r\n  return (\r\n    <Wrapper mobileOpen={mobileOpen}>\r\n      {lg && (\r\n        <MobileHeader>\r\n          <MobileHeaderTitle>{t('filter')}</MobileHeaderTitle>\r\n          <InlineSVG onClick={onToggleMobileMenu} src={CrossIcon.src} />\r\n        </MobileHeader>\r\n      )}\r\n      <List>\r\n        {categories?.results?.map((category) => (\r\n          <Item\r\n            key={category.id}\r\n            onMouseEnter={() => category.id && setHoveredCategoryId(category.id)}\r\n            onMouseLeave={() => setHoveredCategoryId(null)}\r\n          >\r\n            <Accordion\r\n              label={\r\n                <div\r\n                  onMouseEnter={() => category.id && setHoveredCategoryId(category.id)}\r\n                  onMouseLeave={() => setHoveredCategoryId(null)}\r\n                >\r\n                  <Checkbox\r\n                    checked={!!category.id && categoriesQuery.includes(String(category.id))}\r\n                    label={category.name}\r\n                    onChange={(e) => changeCategoryHandler(e, String(category.id))}\r\n                    onClick={(e) => e.stopPropagation()}\r\n                    styles={{\r\n                      text: {\r\n                        fontWeight: 700,\r\n                        lineHeight: 0,\r\n                      },\r\n                    }}\r\n                  />\r\n                </div>\r\n              }\r\n              styles={{\r\n                contentStyles: {\r\n                  paddingTop: 10,\r\n                },\r\n                accordionStyles: {\r\n                  overflow: 'inherit',\r\n                },\r\n              }}\r\n            >\r\n              <ItemChildList>\r\n                {category.children?.map((item) => {\r\n                  const child = item as never as Category\r\n                  return (\r\n                    <ItemChild\r\n                      key={child.id}\r\n                      onMouseEnter={() => child.id && setHoveredCategoryId(child.id)}\r\n                      onMouseLeave={() => setHoveredCategoryId(null)}\r\n                    >\r\n                      <Checkbox\r\n                        checked={!!child.id && categoriesQuery.includes(String(child.id))}\r\n                        onChange={(e) => changeCategoryHandler(e, String(child.id))}\r\n                        label={child.name}\r\n                        styles={{\r\n                          text: {\r\n                            fontWeight: 400,\r\n                            lineHeight: 0,\r\n                          },\r\n                        }}\r\n                      />\r\n                      {checkedBox\r\n                        ? hoveredCategoryId === child.id &&\r\n                          child?.images &&\r\n                          child.images.length > 0 && (\r\n                            <ImageHover>\r\n                              {child.images?.map((image) => (\r\n                                <Image\r\n                                  key={image.id}\r\n                                  src={image.image ? image?.image : ''}\r\n                                  alt={child.name}\r\n                                  width={100}\r\n                                  height={67}\r\n                                />\r\n                              ))}\r\n                            </ImageHover>\r\n                          )\r\n                        : null}\r\n                    </ItemChild>\r\n                  )\r\n                })}\r\n              </ItemChildList>\r\n            </Accordion>\r\n            {checkedBox\r\n              ? hoveredCategoryId === category.id &&\r\n                category?.images &&\r\n                category.images.length > 0 && (\r\n                  <ImageHover>\r\n                    {category.images.map((image) => (\r\n                      <Image\r\n                        key={image.id}\r\n                        src={image ? image?.image || '' : ''}\r\n                        alt={category.name}\r\n                        width={100}\r\n                        height={67}\r\n                      />\r\n                    ))}\r\n                  </ImageHover>\r\n                )\r\n              : null}\r\n          </Item>\r\n        ))}\r\n\r\n        <ClearFilterButton onClick={resetSelectedCategories}>{t('cleanFilter')}</ClearFilterButton>\r\n        <ShowImagesWrapper>\r\n          <Checkbox\r\n            label={t('showHover')}\r\n            onChange={showPicturehover}\r\n            checked={checkedBox}\r\n            styles={{\r\n              text: {\r\n                fontWeight: 400,\r\n                color: theme.colors.gray_200,\r\n              },\r\n              label: {\r\n                alignItems: 'initial',\r\n                padding: 4,\r\n              },\r\n            }}\r\n          />\r\n        </ShowImagesWrapper>\r\n      </List>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nconst { mqMax, colors } = theme\r\nconst fadeIn = keyframes`\r\n  from {\r\n    opacity: 0;\r\n  }\r\n  to {\r\n    opacity: 1;\r\n  }\r\n`\r\nconst ImageHover = styled.div`\r\n  position: absolute;\r\n  display: grid;\r\n  gap: 1px;\r\n  grid-template-columns: repeat(2, 1fr);\r\n  width: 200px !important;\r\n  height: 140px !important;\r\n  margin-left: 100px;\r\n  z-index: 100;\r\n  column-gap: -3px;\r\n  transition-duration: 0.3s;\r\n  animation: ${fadeIn} 0.4s ease-in-out;\r\n  img {\r\n    border-radius: 1px;\r\n    transition-duration: 0.3s;\r\n    object-fit: fill;\r\n  }\r\n  img:nth-child(n + 3) {\r\n    margin-bottom: 3px;\r\n  }\r\n`\r\nconst ClearFilterButton = styled.button`\r\n  display: flex;\r\n  padding: 15px 50px;\r\n  justify-content: center;\r\n  align-items: center;\r\n  gap: 10px;\r\n  align-self: stretch;\r\n  border-radius: 50px;\r\n  border: 1px solid ${colors.primary};\r\n  font-size: 16px;\r\n  font-style: normal;\r\n  font-weight: 500;\r\n  line-height: 16px;\r\n`\r\nconst Wrapper = styled.div<{ mobileOpen: boolean }>`\r\n  transition: transform 0.3s ease-in-out;\r\n\r\n  ${mqMax('lg')} {\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    background-color: #f8f8f8;\r\n    z-index: 2000;\r\n    height: 100vh;\r\n    transform: translateX(${(props) => (props.mobileOpen ? '0' : '-100%')});\r\n  }\r\n`\r\nconst MobileHeader = styled.div`\r\n  background-color: ${colors.primary};\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 17px 13px;\r\n  margin-bottom: 15px;\r\n\r\n  svg {\r\n    cursor: pointer;\r\n  }\r\n`\r\nconst MobileHeaderTitle = styled.h3`\r\n  font-size: 14px;\r\n  font-family: Roboto, sans-serif;\r\n  font-style: normal;\r\n  font-weight: 700;\r\n  line-height: normal;\r\n  color: ${colors.white};\r\n`\r\nconst List = styled.ul`\r\n  display: flex;\r\n  flex-direction: column;\r\n  row-gap: 20px;\r\n\r\n  ${mqMax('lg')} {\r\n    padding: 0 13px;\r\n  }\r\n`\r\nconst Item = styled.li``\r\nconst ItemChildList = styled.ul`\r\n  display: flex;\r\n  flex-direction: column;\r\n  row-gap: 10px;\r\n`\r\nconst ItemChild = styled.li`\r\n  padding-left: 27px;\r\n`\r\nconst ShowImagesWrapper = styled.div`\r\n  margin-top: 20px;\r\n`\r\n\r\nexport default SidebarFilter\r\n","C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\components\\pages\\education\\sign-language\\TopBarFilters.tsx",[],[],"C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\components\\pages\\home\\Capabilities.tsx",[],[],"C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\components\\pages\\home\\Form.tsx",[],[],"C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\components\\pages\\home\\Hero.tsx",[],[],"C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\components\\pages\\home\\Mission.tsx",[],[],"C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\components\\pages\\home\\ProjectGoals.tsx",[],[],"C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\components\\pages\\home\\Video.tsx",[],[],"C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\components\\pages\\medicine\\AnchorLinks.tsx",[],[],"C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\components\\pages\\medicine\\Item.tsx",[],[],"C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\components\\pages\\medicine\\List.tsx",[],[],"C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\components\\pages\\medicine\\MedicineForm.tsx",["581","582"],[],"import { CSSProperties, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport Image from 'next/image'\r\nimport useMediaQuery from '@app/hooks/useMediaQuery'\r\nimport { theme } from '@app/styles/theme'\r\nimport DefaultButton from '@app/components/ui/buttons/DefaultButton'\r\nimport { formDataHttp } from '@app/lib/helpers/formData'\r\n// import Link from 'next/link'\r\nimport { useFormik } from 'formik'\r\nimport * as yup from 'yup'\r\nimport { toast } from 'react-toastify'\r\nimport { ReactNode } from 'react'\r\nimport BoyImage from 'public/images/jpg/form-boy.jpg'\r\nimport GirlImage from 'public/images/jpg/form-girl.jpg'\r\nimport Select from '@app/components/ui/Select'\r\nimport InlineSVG from 'react-inlinesvg'\r\nimport StapleIcon from '../../../../public/images/svg/staple.svg'\r\nimport CountrySelectorInput from '@app/components/ui/inputs/CountrySelectorInput'\r\nimport { useLocations } from '@app/lib/store/locations'\r\nimport { useTranslation } from 'next-i18next'\r\nimport { useRouter } from 'next/router'\r\nimport Link from 'next/link'\r\n\r\nconst validationSchema = yup.object({\r\n  city: yup.string().required('Обязательное поле'),\r\n  full_name: yup.string().required('Обязательное поле'),\r\n  phone_number: yup.string().required('Обязательное поле'),\r\n  email: yup.string().email('Неверный формат').required('Обязательное поле'),\r\n  message: yup.string().required('Обязательное поле'),\r\n})\r\n\r\ninterface IChildren {\r\n  children: ReactNode\r\n}\r\n\r\nconst MedicineForm = ({ children }: IChildren) => {\r\n  const { t } = useTranslation('forms')\r\n  const { t: tButton } = useTranslation('buttons')\r\n  const { locale } = useRouter()\r\n  const [citiesStore, countries] = useLocations((state) => [state.cities, state.countries])\r\n  const [selectedCity, setSelectedCity] = useState<string>('')\r\n  const [selectedCountry, setSelectedCountry] = useState<string>('')\r\n  const cities = citiesStore.filter((city) => city.country === +selectedCountry)\r\n\r\n  const handleCityChange = (selectedOption: any) => {\r\n    setSelectedCity(selectedOption)\r\n    formik.setFieldValue('city', selectedOption)\r\n  }\r\n\r\n  const handleCountryChange = (selectedOption: any) => {\r\n    setSelectedCountry(selectedOption)\r\n  }\r\n\r\n  const xl = useMediaQuery('xl')\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      full_name: '',\r\n      phone_number: '',\r\n      email: '',\r\n      video: null,\r\n      message: '',\r\n      city: selectedCity,\r\n    },\r\n    onSubmit: async (values) => {\r\n      await toast.promise(formDataHttp(values, '/medicine/interpreter-help-forms/', 'POST'), {\r\n        pending: 'Загрузка...',\r\n        success: 'Успех!',\r\n        error: 'Ошибочка...',\r\n      })\r\n      formik.resetForm()\r\n    },\r\n    validationSchema,\r\n  })\r\n  const { full_name, phone_number, email, message } = formik.values\r\n  const chooseCityText = locale === 'ru' ? 'Выбрать город' : 'Select city'\r\n  const chooseCountryText = locale === 'ru' ? 'Выбрать страну' : 'Select country'\r\n\r\n  return (\r\n    <Section>\r\n      <Container>\r\n        {!xl && xl != undefined && (\r\n          <LeftImage>\r\n            <Image src={BoyImage} alt=\"boy\" width={570} height={1000} />\r\n          </LeftImage>\r\n        )}\r\n        <Form onSubmit={formik.handleSubmit}>\r\n          <Title>{children}</Title>\r\n          <FormContent>\r\n            {cities && (\r\n              <CheckBoxes>\r\n                {\r\n                  <Select\r\n                    options={[\r\n                      { label: chooseCountryText, value: '' },\r\n                      ...(countries?.map((country) => ({\r\n                        label: country.name,\r\n                        value: `${country?.id}`,\r\n                      })) || []),\r\n                    ]}\r\n                    value={selectedCountry}\r\n                    placeholder={chooseCountryText}\r\n                    onSelected={handleCountryChange}\r\n                  />\r\n                }\r\n                <Select\r\n                  options={[\r\n                    { label: chooseCityText, value: '' },\r\n                    ...(cities?.map((city) => ({\r\n                      label: city.name,\r\n                      value: `${city?.id}`,\r\n                    })) || []),\r\n                  ]}\r\n                  value={selectedCity}\r\n                  placeholder={chooseCityText}\r\n                  onSelected={handleCityChange}\r\n                />\r\n              </CheckBoxes>\r\n            )}\r\n            <Input onChange={formik.handleChange} value={full_name} name=\"full_name\" placeholder={t('name')} />\r\n            <div style={{ marginTop: '5px' }}>\r\n              <CountrySelectorInput formik={formik} phone_number={phone_number} />\r\n            </div>\r\n            <Input onChange={formik.handleChange} value={email} name=\"email\" placeholder={t('email')} />\r\n            <InputVideoWrapper>\r\n              <input\r\n                type=\"file\"\r\n                name=\"video\"\r\n                accept=\"video/*\"\r\n                value={undefined}\r\n                onChange={(e) => formik.setFieldValue('video', e.target.files?.[0])}\r\n              />\r\n              <InlineSVG src={StapleIcon.src} />\r\n              <p>{formik.values.video ? t('videoMessageAnother') : t('videoMessage')}</p>\r\n            </InputVideoWrapper>\r\n            <Textarea onChange={formik.handleChange} value={message} name=\"message\" placeholder={t('messageText')} />\r\n            {!!Object.values(formik.errors).length && formik.touched.full_name && (\r\n              <ErrorText>Заполните все поля верно!</ErrorText>\r\n            )}\r\n            <BtnWrapper>\r\n              <DefaultButton type=\"submit\">{tButton('send')}</DefaultButton>\r\n            </BtnWrapper>\r\n            <Consent>\r\n              {t('privacyPolicy')}\r\n              <Link href=\"/\">{t('privacyPolicyButton')}</Link>\r\n            </Consent>\r\n          </FormContent>\r\n        </Form>\r\n        {!xl && xl != undefined && (\r\n          <RightImage>\r\n            <Image src={GirlImage} alt=\"girl\" width={570} height={1000} />\r\n          </RightImage>\r\n        )}\r\n      </Container>\r\n    </Section>\r\n  )\r\n}\r\n\r\nconst { colors, mqMax } = theme\r\n\r\nconst InputVideoWrapper = styled.label`\r\n  position: relative;\r\n  width: 100%;\r\n  cursor: pointer;\r\n  display: flex;\r\n  column-gap: 10px;\r\n  padding: 15px 0;\r\n  border-bottom: 1px solid ${colors.gray_200};\r\n  input {\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    opacity: 0;\r\n    pointer-events: none;\r\n  }\r\n  p {\r\n    font-family: 'Roboto', sans-serif;\r\n    font-style: normal;\r\n    font-weight: 400;\r\n    font-size: 18px;\r\n    line-height: 28px;\r\n    color: ${colors.gray_200};\r\n  }\r\n  &:focus-within {\r\n    border-bottom: 1px solid ${colors.primary};\r\n    outline: none;\r\n  }\r\n  ${mqMax('sm')} {\r\n    p {\r\n      font-size: 14px;\r\n    }\r\n  }\r\n`\r\nconst Section = styled.section`\r\n  padding-bottom: 40px;\r\n  ${mqMax('sm')} {\r\n    padding-bottom: 40px;\r\n  }\r\n`\r\nconst Container = styled.div`\r\n  max-width: 1920px;\r\n  margin: 0 auto;\r\n  display: flex;\r\n`\r\nconst LeftImage = styled.div`\r\n  img {\r\n    width: 100%;\r\n    border-radius: 500px;\r\n    overflow: hidden;\r\n    object-fit: cover;\r\n  }\r\n`\r\nconst Form = styled.form`\r\n  flex: 1;\r\n  background: ${colors.white};\r\n  border-radius: 500px;\r\n  padding: 79px 122px;\r\n  ${mqMax('xxl2')} {\r\n    padding: 79px 84px;\r\n  }\r\n  ${mqMax('md')} {\r\n    padding: 59px 34px;\r\n  }\r\n  ${mqMax('sm')} {\r\n    padding: 59px 0;\r\n    border-radius: 200px;\r\n  }\r\n`\r\nconst Title = styled.h2`\r\n  font-family: 'Roboto', sans-serif;\r\n  font-style: normal;\r\n  font-weight: 700;\r\n  font-size: 54px;\r\n  line-height: 62px;\r\n  text-align: center;\r\n  color: ${colors.gray_900};\r\n  margin-bottom: 20px;\r\n  span {\r\n    display: block;\r\n  }\r\n  ${mqMax('md')} {\r\n    font-size: 24px;\r\n    line-height: 26px;\r\n    width: 95%;\r\n  }\r\n`\r\nconst FormContent = styled.div`\r\n  //  max-width: 490px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  padding: 0 31.5px;\r\n`\r\nconst CheckBoxes = styled.div`\r\n  display: flex;\r\n  justify-content: space-around;\r\n  gap: 8px;\r\n  margin-bottom: 15px;\r\n  ${mqMax('md')} {\r\n    flex-direction: column;\r\n    row-gap: 15px;\r\n    margin-bottom: 20px;\r\n  }\r\n`\r\nconst Input = styled.input<{ customStyle?: CSSProperties }>`\r\n  display: block;\r\n  font-family: 'Roboto', sans-serif;\r\n  font-style: normal;\r\n  font-weight: 400;\r\n  font-size: 18px;\r\n  line-height: 28px;\r\n  color: ${colors.gray_200};\r\n  border-bottom: 1px solid ${colors.gray_200};\r\n  padding: 13px 0;\r\n  width: 100%;\r\n  ${(p) => p.customStyle as never}\r\n  margin-bottom: 10px;\r\n  ${mqMax('md')} {\r\n    font-size: 14px;\r\n    margin-bottom: 20px;\r\n  }\r\n  &:focus-within {\r\n    border-bottom: 1px solid ${colors.primary};\r\n    outline: none;\r\n  }\r\n`\r\n\r\nconst Textarea = styled.textarea`\r\n  display: block;\r\n  width: 100%;\r\n  height: 176px;\r\n  border: 1px solid ${colors.gray_200};\r\n  margin: 15px 0 20px;\r\n  padding: 12px 16px;\r\n  font-family: 'Roboto', sans-serif;\r\n  font-style: normal;\r\n  font-weight: 400;\r\n  font-size: 18px;\r\n  line-height: 28px;\r\n  color: ${colors.gray_200};\r\n  &:focus-within {\r\n    border: 1px solid ${colors.primary};\r\n    outline: none;\r\n  }\r\n`\r\nconst ErrorText = styled.h6`\r\n  color: red;\r\n  font-size: 14px;\r\n  margin-bottom: 10px;\r\n`\r\nconst BtnWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  width: 100%;\r\n  margin-bottom: 20px;\r\n`\r\nconst Consent = styled.p`\r\n  font-family: 'Roboto', sans-serif;\r\n  font-style: normal;\r\n  font-weight: 400;\r\n  font-size: 14px;\r\n  line-height: 150%;\r\n  text-align: center;\r\n  color: ${colors.gray_900};\r\n  a {\r\n    color: ${colors.primary};\r\n    display: block;\r\n  }\r\n`\r\n\r\nconst RightImage = styled(LeftImage)``\r\n\r\nexport default MedicineForm\r\n","C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\components\\pages\\news-articles\\ArticleItem.tsx",[],[],"C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\components\\pages\\news-articles\\Articles.tsx",[],[],"C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\components\\pages\\news-articles\\Item.tsx",[],[],"C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\components\\pages\\news-articles\\News.tsx",[],[],"C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\components\\pages\\news-articles\\NewsArticles.tsx",[],[],"C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\components\\pages\\psychologics\\PsychologicalForm.tsx",[],[],"C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\components\\pages\\psychologics\\PsychologicalSupport.tsx",[],[],"C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\components\\pages\\sponsor\\PartnerSelect.tsx",["583"],[],"import React from 'react'\r\nimport { css } from 'styled-components'\r\nimport { DefaultSelect } from '@app/components/ui/DefaultSelect'\r\nimport { useRouter } from 'next/router'\r\n\r\ninterface SelectProps {\r\n  value: string\r\n  onChange: (value: { value: string; label: string }) => void\r\n  options: string[]\r\n}\r\n\r\nconst OptionCss = css`\r\n  &:hover {\r\n    background-color: #e6e6e6;\r\n    color: #000;\r\n  }\r\n`\r\n\r\nconst PartnerSelect: React.FC<SelectProps> = ({ value, onChange, options }) => {\r\n  const { locale } = useRouter()\r\n  const newOptions = options.map((option) => ({ label: option, value: option }))\r\n  newOptions.unshift({ label: 'Выбрать программу', value: '' })\r\n\r\n  return (\r\n    <>\r\n      <DefaultSelect\r\n        styles={{\r\n          select: {\r\n            height: 56,\r\n            width: '100%',\r\n            border: '1px solid #38496C',\r\n            padding: '20px 30px',\r\n            borderRadius: 50,\r\n            fontSize: 20,\r\n          },\r\n          placeholder: {\r\n            color: '#000',\r\n            fontSize: 20,\r\n          },\r\n          arrow: {\r\n            width: 12,\r\n            height: 12,\r\n          },\r\n          dropDown: {\r\n            padding: 2,\r\n            borderRadius: 5,\r\n            maxHeight: 255,\r\n          },\r\n          option: OptionCss,\r\n        }}\r\n        initialValue={locale === 'ru' ? 'Выбрать программу' : 'Select program'}\r\n        onChange={onChange}\r\n        options={newOptions}\r\n      />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default PartnerSelect\r\n","C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\components\\pages\\sponsor\\PartnershipPrograms.tsx",[],[],"C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\components\\pages\\sponsor\\ProgramAccordion.tsx",[],["584"],"C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\components\\pages\\sponsor\\SponsorForm.tsx",["585","586"],[],"import { CSSProperties, useState } from 'react'\nimport styled from 'styled-components'\nimport Image from 'next/image'\nimport useMediaQuery from '@app/hooks/useMediaQuery'\nimport { theme } from '@app/styles/theme'\nimport DefaultButton from '@app/components/ui/buttons/DefaultButton'\nimport { formDataHttp } from '@app/lib/helpers/formData'\nimport Link from 'next/link'\nimport { useFormik } from 'formik'\nimport BoyImage from 'public/images/jpg/form-boy.jpg'\nimport GirlImage from 'public/images/jpg/form-girl.jpg'\nimport { toast } from 'react-toastify'\nimport { SponsorSponsorsList200Response } from '@app/lib/api/gen'\nimport PartnerSelect from '@app/components/pages/sponsor/PartnerSelect'\n\nimport * as yup from 'yup'\nimport CountrySelectorInput from '@app/components/ui/inputs/CountrySelectorInput'\nimport { useTranslation } from 'next-i18next'\n\nconst validationSchema = yup.object({\n  full_name: yup.string().required('Обязательное поле'),\n  phone_number: yup.string().required('Обязательное поле'),\n  email: yup.string().email('Неверный формат').required('Обязательное поле'),\n  message: yup.string().required('Обязательное поле'),\n  collaboration_program: yup.number().required('Обязательное поле'),\n})\n\ninterface ISponsorPrograms {\n  sponsorPrograms?: SponsorSponsorsList200Response\n}\n\nconst SponsorForm = ({ sponsorPrograms }: ISponsorPrograms) => {\n  const [selectedOption, setSelectedOption] = useState('')\n  const [selectedId, setSelectedId] = useState<number | null>(null)\n  const handleSelect = ({ value, label }: { value: string; label: string }) => {\n    const selectedItem = sponsorPrograms?.results.find((item) => item.title === value)\n    setSelectedId(selectedItem?.id || null)\n    setSelectedOption(label)\n\n    formik.setFieldValue('collaboration_program', selectedItem?.id || null)\n  }\n  const { t } = useTranslation('forms')\n  const { t: tButton } = useTranslation('buttons')\n  const xl = useMediaQuery('xl')\n  const formik = useFormik({\n    initialValues: {\n      collaboration_program: selectedId,\n      full_name: '',\n      phone_number: '',\n      email: '',\n      message: '',\n    },\n    onSubmit: async (values) => {\n      await toast.promise(formDataHttp(values, '/sponsor/sponsor-forms/', 'POST'), {\n        pending: 'Загрузка...',\n        success: 'Успех!',\n        error: 'Ошибочка...',\n      })\n      formik.resetForm()\n    },\n    validationSchema,\n  })\n  const { full_name, phone_number, email, message } = formik.values\n  const options: any = sponsorPrograms?.results.map((item) => item.title || item.id) || []\n  const ids: any = sponsorPrograms?.results.map((item) => item.id) || []\n\n  ids\n\n  return (\n    <Section>\n      <Container>\n        {!xl && (\n          <LeftImage>\n            <Image src={BoyImage} alt=\"boy\" width={570} height={1000} />\n          </LeftImage>\n        )}\n        <Form onSubmit={formik.handleSubmit}>\n          <Title>{t('applyCoop')}</Title>\n          <FormContent>\n            <PartnerSelect value={selectedOption} onChange={handleSelect} options={options} />\n            <Input onChange={formik.handleChange} value={full_name} name=\"full_name\" placeholder={t('name')} />\n            <CountrySelectorInput formik={formik} phone_number={phone_number} />\n\n            <Input onChange={formik.handleChange} value={email} name=\"email\" placeholder={t('email')} />\n            <Textarea onChange={formik.handleChange} value={message} name=\"message\" placeholder={t('messageText')} />\n\n            {!!Object.values(formik.errors).length && formik.touched.full_name && (\n              <ErrorText>Заполните все поля верно!</ErrorText>\n            )}\n            <BtnWrapper>\n              <DefaultButton type=\"submit\">{tButton('send')}</DefaultButton>\n            </BtnWrapper>\n            <Consent>\n              {t('privacyPolicy')}\n              <Link href=\"/\">{t('privacyPolicyButton')}</Link>\n            </Consent>\n          </FormContent>\n        </Form>\n        {!xl && (\n          <RightImage>\n            <Image src={GirlImage} alt=\"girl\" width={570} height={1000} />\n          </RightImage>\n        )}\n      </Container>\n    </Section>\n  )\n}\n\nconst { colors, mqMax } = theme\nconst Section = styled.section`\n  margin-top: 80px;\n  padding-bottom: 90px;\n`\nconst Container = styled.div`\n  max-width: 1920px;\n  margin: 0 auto;\n  display: flex;\n`\nconst LeftImage = styled.div`\n  img {\n    width: 100%;\n    border-radius: 500px;\n    overflow: hidden;\n    object-fit: cover;\n  }\n`\nconst Form = styled.form`\n  flex: 1;\n  background: ${colors.white};\n  border-radius: 500px;\n  padding: 121px 142px;\n  ${mqMax('md')} {\n    padding: 59px 34px;\n  }\n  ${mqMax('md')} {\n    padding: 59px 13px;\n    border-radius: 200px;\n  }\n`\nconst Title = styled.h2`\n  font-family: 'Roboto', sans-serif;\n  font-style: normal;\n  font-weight: 700;\n  font-size: 54px;\n  line-height: 62px;\n  text-align: center;\n  color: ${colors.gray_900};\n  margin-bottom: 20px;\n  span {\n    display: block;\n  }\n  ${mqMax('md')} {\n    font-size: 24px;\n    line-height: 26px;\n    width: 95%;\n  }\n`\nconst FormContent = styled.div`\n  padding: 0 31.5px;\n`\n\nconst Input = styled.input<{ customStyle?: CSSProperties }>`\n  display: block;\n  font-family: 'Roboto', sans-serif;\n  font-style: normal;\n  font-weight: 400;\n  font-size: 18px;\n  line-height: 28px;\n  color: ${colors.gray_200};\n  border-bottom: 1px solid ${colors.gray_200};\n  padding: 13px 0;\n  width: 100%;\n  ${(p) => p.customStyle as never}\n  margin-bottom: 10px;\n  ${mqMax('md')} {\n    font-size: 14px;\n    margin-bottom: 20px;\n  }\n  &:focus-within {\n    border-bottom: 1px solid ${colors.primary};\n    outline: none;\n  }\n`\n\nconst Textarea = styled.textarea`\n  display: block;\n  width: 100%;\n  height: 176px;\n  border: 1px solid ${colors.gray_200};\n  margin: 15px 0 20px;\n  padding: 12px 16px;\n  font-family: 'Roboto', sans-serif;\n  font-style: normal;\n  font-weight: 400;\n  font-size: 18px;\n  line-height: 28px;\n  color: ${colors.gray_200};\n  &:focus-within {\n    border: 1px solid ${colors.primary};\n    outline: none;\n  }\n`\nconst ErrorText = styled.h6`\n  color: red;\n  font-size: 14px;\n  margin-bottom: 10px;\n`\nconst BtnWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  width: 100%;\n  margin-bottom: 20px;\n`\nconst Consent = styled.p`\n  font-family: 'Roboto', sans-serif;\n  font-style: normal;\n  font-weight: 400;\n  font-size: 14px;\n  line-height: 150%;\n  text-align: center;\n  color: ${colors.gray_900};\n  a {\n    color: ${colors.primary};\n    display: block;\n  }\n`\n\nconst RightImage = styled(LeftImage)``\n\nexport default SponsorForm\n","C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\components\\Pagination.tsx",[],[],"C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\components\\ui\\Accordion.tsx",[],["587"],"C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\components\\ui\\Banner.tsx",[],[],"C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\components\\ui\\Breadcrumb.tsx",[],[],"C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\components\\ui\\buttons\\DefaultButton.tsx",[],[],"C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\components\\ui\\DefaultSelect.tsx",["588","589"],[],"import React, { CSSProperties } from 'react'\r\nimport { useClickAway } from 'react-use'\r\nimport InlineSVG from 'react-inlinesvg'\r\nimport { RuleSet, styled } from 'styled-components'\r\nimport { theme } from '@app/styles/theme'\r\nimport ArrowDownIcon from 'public/images/svg/arrows/arrowIcon.svg'\r\nimport { IStylesProps } from '@app/@types/common'\r\n\r\ntype TStyles = {\r\n  select?: CSSProperties\r\n  label?: CSSProperties\r\n  placeholder?: CSSProperties\r\n  dropDown?: CSSProperties\r\n  option?: RuleSet<object>\r\n  arrow?: CSSProperties\r\n}\r\ntype TOption = { value: string; label: string; disabled?: boolean } & Record<any, any>\r\ninterface DefaultSelectProps {\r\n  label?: string\r\n  initialValue?: string\r\n  errorMessage?: string | false | undefined\r\n  disabled?: boolean\r\n  styles?: TStyles\r\n  value?: { value: string; label: string } | null\r\n  options: TOption[]\r\n  onChange?: (value: { value: string; label: string }) => void\r\n  customArrowSrc?: string\r\n}\r\n\r\nexport const DefaultSelect = ({\r\n  initialValue,\r\n  value: selectValue,\r\n  options,\r\n  onChange,\r\n  styles,\r\n  label,\r\n  disabled = false,\r\n  customArrowSrc,\r\n}: DefaultSelectProps) => {\r\n  const [value, setValue] = React.useState(selectValue)\r\n  const [isOpen, setIsOpen] = React.useState(false)\r\n  const selectRef = React.useRef<HTMLDivElement>(null)\r\n\r\n  const dropDownToggle = () => {\r\n    if (disabled) return\r\n    setIsOpen((prev) => !prev)\r\n  }\r\n  const handleSelectChange = (value: { value: string; label: string; disabled?: boolean }) => {\r\n    if (value?.disabled) return\r\n\r\n    onChange && onChange(value)\r\n    setValue(value)\r\n    setIsOpen(false)\r\n  }\r\n\r\n  useClickAway(selectRef, () => {\r\n    setIsOpen(false)\r\n  })\r\n\r\n  return (\r\n    <Wrapper>\r\n      {label ? <Label styles={styles?.label}>{label}</Label> : null}\r\n\r\n      <Select ref={selectRef}>\r\n        <SelectHead onClick={dropDownToggle} role=\"presentation\" select={styles?.select}>\r\n          <div>\r\n            {value?.label ||\r\n              (initialValue && <Placeholder styles={styles?.placeholder}>{initialValue}</Placeholder>) ||\r\n              options?.[0].label}\r\n          </div>\r\n\r\n          <Arrow styles={styles?.arrow} isUp={isOpen} src={customArrowSrc || ArrowDownIcon.src} />\r\n        </SelectHead>\r\n\r\n        {isOpen ? (\r\n          <Dropdown styles={styles?.dropDown}>\r\n            {options.map((item) => (\r\n              <Option\r\n                onClick={() => handleSelectChange(item)}\r\n                css={styles?.option}\r\n                disabled={item?.disabled}\r\n                key={item.value}\r\n              >\r\n                {item.label}\r\n              </Option>\r\n            ))}\r\n          </Dropdown>\r\n        ) : null}\r\n      </Select>\r\n    </Wrapper>\r\n  )\r\n}\r\nconst Wrapper = styled.div``\r\nconst Label = styled.p<IStylesProps>`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  font-size: 18px;\r\n  font-weight: 700;\r\n  margin-bottom: 5px;\r\n  ${theme.mqMax('md')} {\r\n    font-size: 14px;\r\n  }\r\n  ${({ styles }) => styles as never}\r\n`\r\nconst Select = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n`\r\nconst SelectHead = styled.div<TStyles>`\r\n  font-weight: 500;\r\n  font-size: 12px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  gap: 0 10px;\r\n  border: 2px solid transparent;\r\n  border-radius: 5px;\r\n  padding: 8px;\r\n  cursor: pointer;\r\n  ${({ select }) => select as never}\r\n`\r\n\r\nconst Placeholder = styled.p<IStylesProps>`\r\n  color: #6e6f6f;\r\n  font-size: 18px;\r\n\r\n  ${theme.mqMax('md')} {\r\n    font-size: 14px;\r\n  }\r\n  ${({ styles }) => styles as never}\r\n`\r\n\r\ninterface IArrowProps {\r\n  isUp: boolean\r\n}\r\nconst Arrow = styled(InlineSVG)<IArrowProps & IStylesProps>`\r\n  width: 8px;\r\n  height: 8px;\r\n  transition: 0.2s;\r\n  ${({ styles }) => styles as never}\r\n  ${({ isUp }) => (isUp ? 'transform: rotate(180deg)' : null)}\r\n`\r\n\r\nconst Dropdown = styled.div<IStylesProps>`\r\n  position: absolute;\r\n  min-width: 100%;\r\n  z-index: 101;\r\n  margin-top: 3px;\r\n  border-radius: 5px;\r\n  background: #fff;\r\n  box-shadow: 0 4px 15px 0 rgba(0, 0, 0, 0.1);\r\n  overflow-y: auto;\r\n  max-height: 400px;\r\n  padding: 2px;\r\n  &::-webkit-scrollbar {\r\n    display: none;\r\n  }\r\n  ${({ styles }) => styles as never}\r\n`\r\n\r\ninterface IOption {\r\n  disabled?: boolean\r\n}\r\nconst Option = styled.div<IOption & { css?: RuleSet<object> }>`\r\n  border: none;\r\n  margin-top: -1px;\r\n  cursor: pointer;\r\n  color: black;\r\n  background: white;\r\n  padding: 6px 11px;\r\n  transition: 0.2s;\r\n  font-size: 16px;\r\n  border-radius: 5px;\r\n\r\n  &:hover {\r\n    background: ${theme.colors.grey};\r\n  }\r\n  ${({ disabled }) =>\r\n    disabled\r\n      ? `cursor: not-allowed;\r\n    color: #dadcdc;`\r\n      : null}\r\n  ${({ css }) => css}\r\n`\r\n","C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\components\\ui\\DownloadInput.tsx",[],[],"C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\components\\ui\\Equalizer\\EqualizerItem.tsx",[],[],"C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\components\\ui\\Equalizer\\index.tsx",[],[],"C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\components\\ui\\Equalizer\\LetterItem.tsx",[],[],"C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\components\\ui\\Equalizer\\SoundEqualizer\\index.tsx",[],[],"C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\components\\ui\\Equalizer\\SoundEqualizer\\SoundEqualizerItem.tsx",[],["590"],"C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\components\\ui\\Equalizer\\SoundEqualizer\\types.ts",[],[],"C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\components\\ui\\inputs\\Checkbox.tsx",[],[],"C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\components\\ui\\inputs\\CountrySelectorInput.tsx",["591","592","593"],[],"import React from 'react'\r\nimport InputMask from 'react-input-mask'\r\nimport styled from 'styled-components'\r\nimport { theme } from '@app/styles/theme'\r\nimport kg from 'public/images/svg/countries/kyrgyzstan.svg'\r\nimport ru from 'public/images/svg/countries/russia.svg'\r\nimport uz from 'public/images/svg/countries/uzbekistn.svg'\r\nimport { DefaultSelect } from '@app/components/ui/DefaultSelect'\r\nimport { useTranslation } from 'next-i18next'\r\n\r\ninterface IFormProps {\r\n  formik: any\r\n  phone_number: string\r\n}\r\n\r\nconst countryOptions = [\r\n  { name: 'Кыргызстан', mask: '+\\\\9\\\\96 (999) 999-999', abr: 'KG', icon: kg },\r\n  { name: 'Узбекистан', mask: '+\\\\9\\\\98 (99) 999-9999', abr: 'UZ', icon: uz },\r\n  { name: 'Россия', mask: '+7 (999) 999-99-99', abr: 'RU', icon: ru },\r\n]\r\n\r\nconst CountrySelectorInput = ({ formik, phone_number }: IFormProps) => {\r\n  const handleCountryChange = (selectedCountry: Record<any, any>) => {\r\n    const selectedMask = countryOptions.find((option) => option.name === selectedCountry.name)?.mask\r\n    formik.setFieldValue('phone_number', '')\r\n    formik.setFieldTouched('phone_number', false)\r\n    formik.setFieldValue('selected_country', selectedCountry.name)\r\n    formik.setFieldValue('selected_mask', selectedMask)\r\n  }\r\n  const { t } = useTranslation('forms')\r\n\r\n  return (\r\n    <InputMaskWrapper>\r\n      <Select width={formik.values.selected_mask ? 'min-content' : '100%'}>\r\n        <DefaultSelect\r\n          styles={{\r\n            select: {\r\n              width: '100%',\r\n              padding: '0',\r\n            },\r\n          }}\r\n          initialValue={t('chooseCountry')}\r\n          onChange={handleCountryChange}\r\n          options={countryOptions.map((item) => ({ label: item.abr, value: item.abr, ...item }))}\r\n        />\r\n      </Select>\r\n\r\n      {formik.values.selected_mask ? (\r\n        <InputMask\r\n          mask={formik.values.selected_mask}\r\n          alwaysShowMask\r\n          onChange={formik.handleChange}\r\n          value={phone_number}\r\n          name=\"phone_number\"\r\n        />\r\n      ) : null}\r\n    </InputMaskWrapper>\r\n  )\r\n}\r\n\r\nconst { colors } = theme\r\nconst Select = styled.div<{ width: string }>`\r\n  width: ${({ width }) => width};\r\n`\r\nconst InputMaskWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 10px;\r\n  padding: 0 0 17px 0;\r\n\r\n  border-bottom: 1px solid ${colors.gray_200};\r\n\r\n  &:focus-within {\r\n    border-bottom: 1px solid ${colors.primary};\r\n  }\r\n\r\n  input {\r\n    display: block;\r\n    font-family: 'Roboto', sans-serif;\r\n    font-style: normal;\r\n    font-weight: 400;\r\n    font-size: 18px;\r\n    line-height: 28px;\r\n    color: ${colors.gray_200};\r\n    width: 100%;\r\n    //margin-bottom: 10px;\r\n\r\n    ${theme.mqMax('md')} {\r\n      font-size: 14px;\r\n    }\r\n  }\r\n`\r\n\r\nexport default CountrySelectorInput\r\n","C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\components\\ui\\map\\Map.tsx",[],["594","595"],"C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\components\\ui\\Menu.tsx",[],[],"C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\components\\ui\\Select.tsx",[],[],"C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\components\\ui\\SeoText.tsx",["596"],[],"import React from 'react'\r\nimport { theme } from '@app/styles/theme'\r\nimport { styled } from 'styled-components'\r\nimport { useRouter } from 'next/router'\r\ninterface ISeoData {\r\n  data?: any\r\n  page?: string\r\n}\r\nconst SeoText = (props: ISeoData) => {\r\n  const { data } = props\r\n  const text = data?.results?.[0].text.replace(/<pre\\b[^>]*>(.*?)<\\/pre>/gs, '$1')\r\n  const { locale } = useRouter()\r\n  const seo = locale === 'ru' ? 'Seo текст' : 'Seo text'\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Container>\r\n        <DescriptionTitle>{seo}</DescriptionTitle>\r\n        <div dangerouslySetInnerHTML={{ __html: data ? text : 'Текст отсутствует' }} />\r\n      </Container>\r\n    </Wrapper>\r\n  )\r\n}\r\nconst { containers, mqMax, colors } = theme\r\n\r\nconst Container = styled.div`\r\n  max-width: ${containers.main};\r\n  margin: 0 auto;\r\n  display: flex;\r\n  gap: 20px;\r\n  flex-direction: column;\r\n  ${mqMax('xl')} {\r\n    padding: 0 13px;\r\n  }\r\n`\r\nconst Wrapper = styled.div`\r\n  background: white;\r\n  padding: 55px 0;\r\n  ${mqMax('sm')} {\r\n    padding: 33px 13px;\r\n  }\r\n`\r\n\r\nconst DescriptionTitle = styled.h4`\r\n  font-size: 32px;\r\n  font-family: Roboto, sans-serif;\r\n  font-weight: 700;\r\n  line-height: 38px;\r\n  letter-spacing: -0.16px;\r\n  color: ${colors.dark};\r\n  ${mqMax('md')} {\r\n    font-size: 24px;\r\n    font-weight: 700;\r\n    line-height: 26px;\r\n    letter-spacing: -0.12px;\r\n  }\r\n`\r\nexport default SeoText\r\n","C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\components\\ui\\Share.tsx",["597"],[],"import React, { useState } from 'react'\nimport { styled } from 'styled-components'\nimport useMediaQuery from '@app/hooks/useMediaQuery'\nimport shareSvg from 'public/images/svg/share 1.svg'\nimport Image from 'next/image'\nimport link from 'public/images/svg/Icon_Link.svg'\nimport vk from 'public/images/svg/Icon_Vk.svg'\nimport tg from 'public/images/svg/Icon_Tg.svg'\nimport ok from 'public/images/svg/Icon_Ok.svg'\nimport { useRouter } from 'next/router'\n\ninterface IUrlProps {\n  currentUrl?: string | undefined | any\n}\n\nconst Share = ({ currentUrl }: IUrlProps) => {\n  const isMobile = useMediaQuery('sm')\n  const [isDropdownOpen, setIsDropdownOpen] = useState(false)\n  const [isLinkCopied, setIsLinkCopied] = useState(false)\n  const { locale } = useRouter()\n  const share = locale === 'ru' ? 'Поделиться' : 'Share'\n  const copyLink = locale === 'ru' ? 'Скопировать ссылку' : 'Copy a link'\n  const handleToggleDropdown = () => {\n    if (isMobile) {\n      setIsDropdownOpen(!isDropdownOpen)\n    }\n  }\n\n  const handleMouseEnter = () => {\n    if (!isMobile) {\n      setIsDropdownOpen(true)\n    }\n  }\n\n  const handleMouseLeave = () => {\n    if (!isMobile) {\n      setIsDropdownOpen(false)\n    }\n  }\n  const handleCopyLink = () => {\n    if (currentUrl) {\n      if (navigator.clipboard) {\n        navigator.clipboard\n          .writeText(currentUrl)\n          .then(() => {\n            setIsDropdownOpen(false)\n          })\n          .catch((error) => {\n            throw error\n          })\n        setIsLinkCopied(true)\n      } else {\n        const textField = document.createElement('textarea')\n        textField.value = currentUrl\n        document.body.appendChild(textField)\n        textField.select()\n        document.execCommand('copy')\n        textField.remove()\n        setIsDropdownOpen(false)\n      }\n    }\n  }\n  //TG\n  const handleShareTelegram = () => {\n    const telegramBaseUrl = 'https://t.me/share/url'\n    const encodedUrl = encodeURIComponent(currentUrl)\n    const telegramUrl = `${telegramBaseUrl}?url=${encodedUrl}`\n    window.open(telegramUrl, '_blank')\n    setIsDropdownOpen(false)\n  }\n  //VK\n  const handleShareVk = () => {\n    const vkBaseUrl = 'https://vk.com/share.php'\n    const encodedUrl = encodeURIComponent(currentUrl)\n    const vkUrl = `${vkBaseUrl}?url=${encodedUrl}`\n    window.open(vkUrl, '_blank')\n    setIsDropdownOpen(false)\n  }\n  //\n  const handleShareOk = () => {\n    const okBaseUrl = 'https://connect.ok.ru/dk'\n    const encodedUrl = encodeURIComponent(currentUrl)\n    const okUrl = `${okBaseUrl}?st.cmd=WidgetSharePreview&st.shareUrl=${encodedUrl}`\n    window.open(okUrl, '_blank')\n    setIsDropdownOpen(false)\n  }\n\n  const arrayItems = [\n    {\n      title: copyLink,\n      icon: link,\n      onClick: handleCopyLink,\n    },\n    {\n      title: 'ВКонтакте',\n      icon: vk,\n      onClick: handleShareVk,\n    },\n    {\n      title: 'Telegram',\n      icon: tg,\n      onClick: handleShareTelegram,\n    },\n    {\n      title: 'Одноклассники',\n      icon: ok,\n      onClick: handleShareOk,\n    },\n  ]\n  return (\n    <ShareWrapper onMouseEnter={handleMouseEnter} onMouseLeave={handleMouseLeave}>\n      <ButtonShare onClick={handleToggleDropdown}>\n        <Image src={shareSvg} width={18} height={18} alt=\"share\" />\n        <p>{share}</p>\n      </ButtonShare>\n      {isDropdownOpen && (\n        <DropDown>\n          {arrayItems.map((item) => (\n            <Item key={item.title} onClick={item.onClick}>\n              <Image src={item.icon} alt={item.title} width={20} height={20} /> {item.title}\n            </Item>\n          ))}\n        </DropDown>\n      )}\n      {isLinkCopied && <Notification>Ссылка скопирована!</Notification>}\n    </ShareWrapper>\n  )\n}\n\nconst ShareWrapper = styled.div`\n  margin-top: 40px;\n  max-height: 140px;\n  margin-bottom: 40px;\n`\n\nconst DropDown = styled.div`\n  background: white;\n  position: absolute;\n  max-width: 200px;\n  border-radius: 5px;\n`\nconst ButtonShare = styled.button`\n  display: flex;\n  max-width: 130px;\n  gap: 10px;\n  align-items: center;\n  font-family: Roboto, sans-serif;\n  font-size: 16px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: 25px; /* 156.25% */\n  color: #4f4f4f;\n`\n\nconst Item = styled.li`\n  transition-duration: 0.2s;\n  cursor: pointer;\n  display: flex;\n  width: 200px;\n  padding: 6px 11px;\n  align-items: center;\n  gap: 4px;\n  border-radius: 5px;\n  &:hover {\n    background: var(--grey, #e6e6e6);\n  }\n  font-family: Roboto, sans-serif;\n  font-size: 16px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: 25px;\n`\nconst Notification = styled.div`\n  position: fixed;\n  bottom: 20px;\n  left: 50%;\n  transform: translateX(-50%);\n  padding: 10px 16px;\n  background-color: #333;\n  color: #fff;\n  border-radius: 4px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n  z-index: 999;\n  opacity: 0;\n  animation: fadeInOut 3s ease-in-out;\n\n  @keyframes fadeInOut {\n    0%,\n    100% {\n      opacity: 0;\n    }\n    10%,\n    90% {\n      opacity: 1;\n    }\n  }\n`\n\nexport default Share\n","C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\components\\ui\\Video.tsx",[],["598"],"C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\hooks\\useIsClient.ts",[],[],"C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\hooks\\useMediaQuery.ts",[],[],"C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\lib\\api\\axios.ts",["599"],[],"import axios from 'axios'\r\nimport env from '../env'\r\n\r\nexport const $api: any = axios.create({\r\n  baseURL: env.API_URL || process.env.NEXT_PUBLIC_API_URL,\r\n})\r\n\r\n// $api.interceptors.request.use(\r\n//   (config: InternalAxiosRequestConfig) => {\r\n//     \r\n//     config.headers['Accept-Language'] = Cookies.get('lang')\r\n//     return config\r\n//   },\r\n//   (error: AxiosError) => {\r\n//     Promise.reject(error)\r\n//   }\r\n// )\r\n// $api.interceptors.response.use(\r\n//   (response: AxiosResponse) => {\r\n//     return response\r\n//   },\r\n//   async (error: AxiosError) => {\r\n//     return Promise.reject(error)\r\n//   }\r\n// )\r\n\r\n// $api.interceptors.request.use(\r\n//   (config: InternalAxiosRequestConfig) => {\r\n//     const token = Cookies.get('accessToken')\r\n//     if (token) {\r\n//       config.headers['Authorization'] = `Bearer ${token}`\r\n//     }\r\n//     return config\r\n//   },\r\n//   (error: AxiosError) => {\r\n//     Promise.reject(error)\r\n//   }\r\n// )\r\n//\r\n// $api.interceptors.response.use(\r\n//   (response: AxiosResponse) => {\r\n//     return response\r\n//   },\r\n//   async (error: AxiosError<any>) => {\r\n//     const originalRequest = error.config as InternalAxiosRequestConfig<any> & { _retry: boolean }\r\n//     if (\r\n//       error.response?.status === 401 &&\r\n//       !originalRequest._retry &&\r\n//       find(error.response.data.messages, (v) => v.token_type === 'access')\r\n//     ) {\r\n//       originalRequest._retry = true\r\n//       try {\r\n//         const { data } = await axios.post(`${API_URL}/accounts/auth/jwt/refresh/`, {\r\n//           refresh: `${Cookies.get('refreshToken')}`,\r\n//         })\r\n//         Cookies.set('accessToken', data.access)\r\n//       } catch (error) {\r\n//         useUser.getState().toggleAuth(false)\r\n//         window.location.href = '/user/login'\r\n//       }\r\n//       return $api(originalRequest)\r\n//     }\r\n//     return Promise.reject(error)\r\n//   }\r\n// )\r\n","C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\lib\\api\\index.ts",[],[],"C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\lib\\env.ts",[],[],"C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\lib\\helpers\\dynamicLocalization.ts",[],[],"C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\lib\\helpers\\formData.ts",["600"],["601","602","603"],"import axios from 'axios'\r\n\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nexport function formDataHttp(data: any, url: string, method = 'put', headers = {}, baseUrl = true) {\r\n  return axios({\r\n    method,\r\n    url: `${baseUrl ? process.env.NEXT_PUBLIC_API_URL : ''}${url}`,\r\n    data: formData(data),\r\n    headers,\r\n  })\r\n}\r\n\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nfunction buildFormData(formData: any, data: any, parentKey?: string) {\r\n  if (data && typeof data === 'object' && !Array.isArray(data) && !(data instanceof Date) && !(data instanceof File)) {\r\n    Object.keys(data).forEach((key) => {\r\n      buildFormData(formData, data[key], parentKey ? `${parentKey}[${key}]` : key)\r\n    })\r\n  } else if (Array.isArray(data)) {\r\n    data.forEach((itemOfItem) => buildFormData(formData, itemOfItem, parentKey))\r\n  } else {\r\n    const value = data == null ? '' : data\r\n    formData.append(parentKey, value)\r\n  }\r\n}\r\nexport function formData(data: any) {\r\n  const formData = new FormData()\r\n  buildFormData(formData, data)\r\n\r\n  return formData\r\n}\r\n","C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\lib\\helpers\\htmlToStr.ts",[],[],"C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\lib\\helpers\\offsetToPage.ts",[],[],"C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\lib\\helpers\\passwordGenerator\\helper.ts",[],[],"C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\lib\\helpers\\passwordGenerator\\index.ts",[],[],"C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\lib\\helpers\\prettifyNumber\\helper.ts",[],[],"C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\lib\\helpers\\prettifyNumber\\index.ts",[],[],"C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\lib\\helpers\\removeUndefined\\helper.ts",[],[],"C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\lib\\helpers\\removeUndefined\\index.ts",[],[],"C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\lib\\store\\locations.ts",[],[],"C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\pages\\404.tsx",[],[],"C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\pages\\camps\\index.tsx",[],[],"C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\pages\\career\\index.tsx",[],[],"C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\pages\\contacts\\index.tsx",[],[],"C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\pages\\download\\index.tsx",["604","605"],[],"import React, { useState } from 'react'\nimport { styled } from 'styled-components'\nimport Breadcrumb from '@app/components/ui/Breadcrumb'\nimport { theme } from '@app/styles/theme'\nimport DownloadInput from '@app/components/ui/DownloadInput'\nimport TopFilters from '@app/components/pages/download/TopFilters'\nimport useMediaQuery from '@app/hooks/useMediaQuery'\nimport SeoText from '@app/components/ui/SeoText'\nimport SidebarFilter from '@app/components/pages/education/sign-language/SidebarFilter'\nimport { GetServerSideProps } from 'next'\nimport { $apiCommon, $apiEducation } from '@app/lib/api'\nimport {\n  CommonSeoTextList200Response,\n  Course,\n  EducationCategoriesList200Response,\n  EducationCoursesList200Response,\n  Lesson,\n} from '@app/lib/api/gen'\n\nimport word from 'public/images/svg/word.svg'\nimport excel from 'public/images/svg/excel.svg'\nimport pdf from 'public/images/svg/pdf.svg'\nimport Image from 'next/image'\nimport Link from 'next/link'\nimport { serverSideTranslations } from 'next-i18next/serverSideTranslations'\nimport { defaultLanguage } from '@app/@types/languages'\nimport { useTranslation } from 'next-i18next'\nimport { useRouter } from 'next/router'\n\ninterface IDownloadProps {\n  courses?: EducationCoursesList200Response\n  categories?: EducationCategoriesList200Response\n  seoData?: CommonSeoTextList200Response\n}\n\nconst getFileExtension = (url: string) => {\n  const parts = url.split('.')\n  if (parts.length > 1) {\n    return parts[parts.length - 1].toLowerCase()\n  }\n  return ''\n}\nconst Download = ({ categories, courses, seoData }: IDownloadProps) => {\n  const [searchQuery, setSearchQuery] = useState('')\n  const { locale } = useRouter()\n  const main = locale === 'ru' ? 'Главная' : 'Home'\n  const download = locale === 'ru' ? 'Скачать' : 'Download'\n  const breadcrumb = [{ label: main, link: '/' }, { label: download }]\n  const [mobileOpen, setMobileOpen] = useState(false)\n  const [selectedCategories, setSelectedCategories] = useState<number[]>([])\n  const [selectedAgeFilter, setSelectedAgeFilter] = useState<string>('')\n\n  selectedCategories && selectedAgeFilter\n\n  const toggleMobileOpen = () => {\n    setMobileOpen((prev) => !prev)\n  }\n\n  const isLarge = useMediaQuery('lg')\n  const handleCategoryClick = (categoryIds: any[]) => {\n    setSelectedCategories(categoryIds)\n  }\n\n  const handleAgeFilterChange = (value: string) => {\n    setSelectedAgeFilter(value)\n  }\n\n  const handleSearch = (query: string) => {\n    setSearchQuery(query)\n  }\n\n  const filteredCourses = courses?.results.filter((course) => {\n    const courseTitle = course.title.toLowerCase()\n    return courseTitle.includes(searchQuery.toLowerCase())\n  })\n\n  const getFileIcon = (fileUrl: string) => {\n    const extension = getFileExtension(fileUrl)\n    switch (extension) {\n      case 'doc':\n      case 'docx':\n        return word\n      case 'xls':\n      case 'xlsx':\n        return excel\n      case 'pdf':\n        return pdf\n      default:\n        return null\n    }\n  }\n  const { t } = useTranslation('dowload')\n  return (\n    <div>\n      <Container>\n        <BreadcrumbWrapper>\n          <Breadcrumb items={breadcrumb} />\n        </BreadcrumbWrapper>\n        {!isLarge && <Title>{t('title')}</Title>}\n        <InnerWrapper>\n          <LeftBlock>\n            <SidebarFilter\n              onToggleMobileMenu={toggleMobileOpen}\n              mobileOpen={mobileOpen}\n              categories={categories}\n              onClickCategory={handleCategoryClick}\n            />\n          </LeftBlock>\n          <RightBlock>\n            <TopFilters onToggleMobileMenu={toggleMobileOpen} onAgeFilterChange={handleAgeFilterChange} />\n            <InputBlock>\n              <DownloadInput onSearch={handleSearch} />\n              {filteredCourses && filteredCourses.length > 0 ? (\n                filteredCourses.map(\n                  (course: Course) =>\n                    !!course.lessons?.length && (\n                      <ItemWrapper key={course.title}>\n                        <h1>{course.title}</h1>\n                        {course.lessons?.map((lesson: Lesson) => (\n                          <LessonBlock key={lesson.title}>\n                            <LessonTitle>{lesson.title}</LessonTitle>\n                            <FileList>\n                              {lesson?.files ? (\n                                lesson?.files.map((file) => (\n                                  <FileBlock key={file.id}>\n                                    <Link type=\"download\" href={file.file} target=\"_blank\" key={file.name}>\n                                      {getFileIcon(file.file) && (\n                                        <Image width={36} height={36} src={getFileIcon(file.file)} alt=\"file icon\" />\n                                      )}\n                                      <SmallTitle>{file.name}</SmallTitle>\n                                    </Link>\n                                  </FileBlock>\n                                ))\n                              ) : (\n                                <h1>у данного курса отсутствуют файлы</h1>\n                              )}\n                            </FileList>\n                          </LessonBlock>\n                        ))}\n                      </ItemWrapper>\n                    )\n                )\n              ) : (\n                <h2>Курсы отсутствуют по данному запросу</h2>\n              )}\n            </InputBlock>\n          </RightBlock>\n        </InnerWrapper>\n      </Container>\n      <SeoText data={seoData} />\n    </div>\n  )\n}\n\nexport const getServerSideProps: GetServerSideProps = async ({ query, locale }: any) => {\n  const selectedCategories = query.category ? query.category.split(',') : []\n  const targetAudience = query.target_audience || ''\n\n  const forAdults = targetAudience === 'adults' ? 'true' : undefined\n  const forChildren = targetAudience === 'children' ? 'true' : undefined\n  const forAll = targetAudience === '' ? 'true' : undefined\n  const [courses, categories] = await Promise.all([\n    $apiEducation.educationCoursesList(forAdults, forChildren, forAll, selectedCategories, undefined, undefined, {\n      headers: {\n        'Accept-language': locale || defaultLanguage,\n      },\n    }),\n    $apiEducation.educationCategoriesList(undefined, undefined, {\n      headers: {\n        'Accept-language': locale || defaultLanguage,\n      },\n    }),\n  ])\n  const { data: seoData } = await $apiCommon.commonSeoTextList('download', undefined, undefined, {\n    headers: {\n      'Accept-language': locale || defaultLanguage,\n    },\n  })\n  return {\n    props: {\n      courses: courses.data,\n      categories: categories.data,\n      seoData: seoData,\n      ...(await serverSideTranslations(locale || defaultLanguage, ['common', 'dowload', 'buttons'])),\n    },\n  }\n}\nconst { containers, mqMax, colors } = theme\n\nconst LessonTitle = styled.h5`\n  font-size: 24px;\n  font-style: normal;\n  font-weight: 700;\n  line-height: 26px;\n  letter-spacing: -0.12px;\n  margin-bottom: 10px;\n\n  ${mqMax('sm')} {\n    font-size: 18px;\n  }\n`\nconst LessonBlock = styled.div``\nconst ItemWrapper = styled.div`\n  margin-top: 54px;\n  display: flex;\n  flex-direction: column;\n  row-gap: 20px;\n\n  h1 {\n    font-size: 32px;\n    font-weight: 700;\n    line-height: 38px; /* 118.75% */\n    letter-spacing: -0.16px;\n    margin-top: 10px;\n\n    ${mqMax('md')} {\n      font-size: 24px;\n    }\n  }\n`\nconst InputBlock = styled.div`\n  margin-top: -15px;\n  width: 792px;\n\n  ${mqMax('xxl')} {\n    max-width: 732px;\n    min-width: 300px;\n  }\n\n  ${mqMax('md')} {\n    width: 100%;\n  }\n`\nconst FileList = styled.div`\n  display: flex;\n  width: 896px;\n  flex-direction: row;\n  row-gap: 20px;\n  column-gap: 20px;\n  flex-wrap: wrap;\n\n  ${mqMax('xl')} {\n  }\n\n  ${mqMax('md')} {\n    justify-content: center;\n    width: 100%;\n  }\n`\nconst SmallTitle = styled.div`\n  color: #38496c;\n  font-family: Roboto, sans-serif;\n  font-size: 16px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: 25px;\n\n  ${mqMax('sm')} {\n    font-size: 14px;\n  }\n`\nconst FileBlock = styled.div`\n  border-radius: 10px;\n  height: 80px;\n  display: flex;\n  flex-direction: row;\n  padding: 22px 100px 22px 35px;\n  align-items: center;\n  gap: 15px;\n  background: white;\n\n  ${mqMax('xl')} {\n    min-width: 344px;\n  }\n\n  ${mqMax('md')} {\n    width: 100%;\n  }\n\n  ${mqMax('sm')} {\n    padding: 22px 20px 22px 18px;\n    min-width: 284px;\n  }\n  a {\n    display: flex;\n    align-items: center;\n    gap: 15px;\n  }\n`\nconst RightBlock = styled.div``\nconst LeftBlock = styled.div``\nconst Container = styled.div`\n  max-width: ${containers.main};\n  margin: 0 auto;\n  padding-bottom: 70px;\n  min-width: 270px;\n\n  ${mqMax('xl')} {\n    padding: 0 13px 40px 13px;\n  }\n  ${mqMax('sm')} {\n    padding-bottom: 40px;\n  }\n`\n\nconst InnerWrapper = styled.div`\n  display: grid;\n  grid-template-columns: minmax(100px, 260px) 1fr;\n  column-gap: 45px;\n  ${mqMax('lg')} {\n    grid-template-columns: 1fr;\n  }\n`\nconst BreadcrumbWrapper = styled.div`\n  margin: 20px 0;\n\n  ${mqMax('md')} {\n    margin: 15px 0;\n  }\n`\nconst Title = styled.h1`\n  font-size: 54px;\n  font-family: Roboto, sans-serif;\n  font-weight: 700;\n  line-height: 53px;\n  letter-spacing: -0.324px;\n  color: ${colors.dark};\n  margin-bottom: 30px;\n`\n\nexport default Download\n","C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\pages\\education\\children-clubs\\index.tsx",[],[],"C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\pages\\education\\reading\\index.tsx",[],[],"C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\pages\\education\\sign-language\\index.tsx",["606","607"],["608"],"/* eslint-disable @typescript-eslint/ban-ts-comment */\n// @ts-ignore\nimport Banner from '@app/components/ui/Banner'\nimport LetterIcon from 'public/images/svg/letters/я.svg'\nimport SignIcon from 'public/images/svg/signs/sign-lang.svg'\nimport Breadcrumb from '@app/components/ui/Breadcrumb'\nimport React, { useRef, useState } from 'react'\nimport styled from 'styled-components'\nimport { theme } from '@app/styles/theme'\nimport { GetServerSideProps } from 'next'\nimport { $apiCommon, $apiEducation } from '@app/lib/api'\nimport SignLangList from '@app/components/pages/education/sign-language/List'\nimport { EducationCategoriesList200Response, EducationCoursesList200Response } from '@app/lib/api/gen/api'\nimport TopBarFilters from '@app/components/pages/education/sign-language/TopBarFilters'\nimport SidebarFilter from '@app/components/pages/education/sign-language/SidebarFilter'\nimport SeoText from '@app/components/ui/SeoText'\nimport { pageToOffset } from '@app/lib/helpers/offsetToPage'\nimport Pagination from '@app/components/Pagination'\nimport { useRouter } from 'next/router'\nimport { isEmpty } from 'lodash-es'\nimport { serverSideTranslations } from 'next-i18next/serverSideTranslations'\nimport { defaultLanguage } from '@app/@types/languages'\nimport { useTranslation } from 'next-i18next'\nimport { CommonSeoTextList200Response } from '@app/lib/api/gen'\n\ninterface ISignLanguageProps {\n  courses?: EducationCoursesList200Response\n  categories?: EducationCategoriesList200Response\n  seoData?: CommonSeoTextList200Response\n}\nconst limitTile = 15\nconst limitList = 7\nconst SignLanguage = ({ courses, categories, seoData }: ISignLanguageProps) => {\n  const { query, push, pathname, locale } = useRouter()\n  const [mobileOpen, setMobileOpen] = useState(false)\n  const [selectedCategories, setSelectedCategories] = useState<number[]>([])\n  const [selectedAgeFilter, setSelectedAgeFilter] = useState<string>('')\n  const main = locale === 'ru' ? 'Главная' : 'Home'\n  const education = locale === 'ru' ? 'Учеба' : 'Education'\n  const signText = locale === 'ru' ? 'Язык жестов' : 'Sign language'\n  const { current: breadcrumb } = useRef([{ label: main, link: '/' }, { label: education }, { label: signText }])\n  const view = query?.view === 'list' ? 'list' : 'tile'\n  const { t } = useTranslation('signLanguage')\n  selectedCategories && selectedAgeFilter\n\n  const isCoursesEmpty = isEmpty(courses)\n\n  const handleAgeFilterChange = (value: string) => {\n    setSelectedAgeFilter(value)\n  }\n  const toggleMobileOpen = () => {\n    setMobileOpen((prev) => !prev)\n  }\n  const handleCategoryClick = (categoryIds: any[]) => {\n    setSelectedCategories(categoryIds)\n  }\n\n  const handlePageChange = async (page: number) => {\n    await push({\n      pathname,\n      query: { ...query, page },\n    })\n  }\n  const limit = view === 'list' ? limitList : limitTile\n\n  return (\n    <>\n      <BreadcrumbWrapper>\n        <Breadcrumb items={breadcrumb} />\n      </BreadcrumbWrapper>\n      <Banner\n        title={t('title')}\n        image=\"/images/jpg/sign-lang-banner.jpg\"\n        deafInfo={{\n          letter: LetterIcon,\n          sign: SignIcon,\n        }}\n      />\n      <Container>\n        <Content>\n          <div>\n            <SidebarFilter\n              mobileOpen={mobileOpen}\n              onToggleMobileMenu={toggleMobileOpen}\n              categories={categories}\n              onClickCategory={handleCategoryClick}\n            />\n          </div>\n          <div>\n            <TopBarFilters onToggleMobileMenu={toggleMobileOpen} onAgeFilterChange={handleAgeFilterChange} />\n            <SignLangList courses={courses} view={view} limit={limit} />\n            {!isCoursesEmpty && (\n              <Pagination\n                currentPage={Number(query?.page) || 1}\n                count={courses?.count || 1}\n                onChange={handlePageChange}\n                pageLimit={limit}\n              />\n            )}\n          </div>\n        </Content>\n      </Container>\n      <SeoText data={seoData} />\n    </>\n  )\n}\n\nconst { containers, mqMax } = theme\nconst BreadcrumbWrapper = styled.div`\n  max-width: ${containers.main};\n  margin: 20px auto;\n  ${theme.mqMax('xl')} {\n    padding: 0 13px;\n  }\n`\nconst Container = styled.div`\n  max-width: ${containers.main};\n  margin: 40px auto;\n  ${theme.mqMax('xl')} {\n    padding: 0 13px;\n  }\n`\nconst Content = styled.div`\n  display: grid;\n  grid-template-columns: minmax(100px, 260px) 1fr;\n  column-gap: 45px;\n  ${mqMax('lg')} {\n    grid-template-columns: 1fr;\n  }\n`\nexport const getServerSideProps: GetServerSideProps = async ({ query, locale }: any) => {\n  const selectedCategories = query.category ? query.category.split(',') : []\n  const targetAudience = query.target_audience || ''\n  const forAdults = targetAudience === 'adults' ? 'true' : undefined\n  const forChildren = targetAudience === 'children' ? 'true' : undefined\n  const forAll = targetAudience === '' ? 'true' : undefined\n  const view = query?.view === 'list' ? 'list' : 'tile'\n\n  let limit\n  if (view === 'list') {\n    limit = limitList\n  } else {\n    limit = limitTile\n  }\n  const [courses, categories] = await Promise.all([\n    $apiEducation.educationCoursesList(\n      forAdults,\n      forChildren,\n      forAll,\n      selectedCategories,\n      limit,\n      pageToOffset(query?.page, limit),\n      {\n        headers: {\n          'Accept-Language': locale || defaultLanguage,\n        },\n      }\n    ),\n    $apiEducation.educationCategoriesList(undefined, undefined, {\n      headers: {\n        'Accept-language': locale || defaultLanguage,\n      },\n    }),\n  ])\n  const { data } = await $apiCommon.commonSeoTextList('education', undefined, undefined, {\n    headers: {\n      'Accept-language': locale || defaultLanguage,\n    },\n  })\n  return {\n    props: {\n      courses: courses.data,\n      categories: categories.data,\n      seoData: data,\n      ...(await serverSideTranslations(locale || defaultLanguage, ['common', 'signLanguage', 'buttons'])),\n    },\n  }\n}\n\nexport default SignLanguage\n","C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\pages\\index.tsx",[],[],"C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\pages\\medicine\\index.tsx",[],[],"C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\pages\\parents\\index.tsx",[],[],"C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\pages\\psycho-support\\index.tsx",[],[],"C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\pages\\sponsor\\index.tsx",[],[],"C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\pages\\_app.tsx",[],[],"C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\pages\\_document.tsx",[],[],"C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\styles\\theme.ts",[],[],"C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\@types\\common.ts",[],[],"C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\components\\layout\\consts.ts",["609"],[],"import { ReactNode } from 'react'\nimport russiaIcon from '../../../public/images/svg/russia.svg'\nimport engIcon from '../../../public/images/svg/flags/England.svg'\n\nexport interface MenuItemType {\n  title?: ReactNode\n  id: number\n  name: string\n  link?: string\n  items?: {\n    id: number\n    title: string\n    link: string\n  }[]\n}\n\nexport const variants = {\n  open: { opacity: 1, x: 0 },\n  closed: { opacity: 0, x: '-100%' },\n}\n\nexport const languages: any[] = [\n  { id: 1, name: 'ru', icon: russiaIcon },\n  { id: 2, name: 'en', icon: engIcon },\n]\n","C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\components\\ui\\AccordionHeader.tsx",["610"],["611","612","613","614"],"/* eslint-disable @typescript-eslint/no-explicit-any */\nimport React, { ComponentPropsWithRef, CSSProperties, ReactNode } from 'react'\nimport { AnimatePresence, motion } from 'framer-motion'\nimport styled from 'styled-components'\n\nimport InlineSVG from 'react-inlinesvg'\nimport ArrowDefault from 'public/images/svg/arrows/arrowIcon.svg'\n\ninterface IStylesProps {\n  accordionStyles?: CSSProperties\n  contentStyles?: CSSProperties\n  labelStyles?: CSSProperties\n  fontSize?: any\n}\ninterface DefaultDropdownProps extends ComponentPropsWithRef<'div'> {\n  label: ReactNode\n  customArrow?: ReactNode\n  styles?: IStylesProps\n  fontSize?: string\n  marginBottom?: any\n  fontWeight?: any\n}\n\nconst AccordionHeaderComponent = ({\n  label,\n  customArrow,\n  children,\n  styles = {\n    accordionStyles: {},\n    contentStyles: {},\n    labelStyles: {},\n  },\n  marginBottom,\n  fontWeight,\n  ...other\n}: DefaultDropdownProps) => {\n  const [isOpen, setIsOpen] = React.useState(false)\n\n  const handleToggle = () => {\n    setIsOpen(!isOpen)\n  }\n\n  return (\n    <AccordionWrapper marginBottom={marginBottom} {...other}>\n      <AccordionHeader styles={styles?.accordionStyles} onClick={handleToggle}>\n        <Label styles={styles?.labelStyles}>{label}</Label>\n        <ArrowContainer active={isOpen}>\n          {customArrow ? customArrow : <InlineSVG src={ArrowDefault.src} />}\n        </ArrowContainer>\n      </AccordionHeader>\n\n      <AnimatePresence>\n        {isOpen && (\n          <motion.div\n            initial={{ opacity: 0, height: 0 }}\n            animate={{ opacity: 1, height: 'auto' }}\n            exit={{ opacity: 0, height: 0 }}\n          >\n            <Content styles={styles?.contentStyles}>{children}</Content>\n          </motion.div>\n        )}\n      </AnimatePresence>\n    </AccordionWrapper>\n  )\n}\n\ninterface IStylesProps {\n  styles?: CSSProperties\n}\nconst AccordionWrapper = styled.div<{ marginBottom: any }>`\n  width: 100%;\n  overflow: hidden;\n  margin-bottom: ${(props) => props.marginBottom};\n`\nconst AccordionHeader = styled.div<IStylesProps>`\n  display: flex;\n  cursor: pointer;\n  align-items: flex-start;\n  gap: 10px;\n  font-size: ${({ fontSize }) => fontSize};\n  font-family: 'Oswald', sans-serif;\n  font-weight: 700;\n`\nconst Label = styled.span<IStylesProps>``\nconst ArrowContainer = styled.div<{\n  active: boolean\n}>`\n  transform: ${({ active }) => (active ? 'rotate(180deg)' : 'rotate(0deg)')};\n`\nconst Content = styled.div<IStylesProps>`\n  ${({ styles }) => styles as never}\n`\n\nexport default AccordionHeaderComponent\n","C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\components\\ui\\PageLoader.tsx",[],[],"C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\components\\ui\\Pagination.tsx",[],[],"C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\pages\\camps\\[slug].tsx",[],[],"C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\pages\\career\\[slug].tsx",[],[],"C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\pages\\education\\children-clubs\\[slug].tsx",[],[],"C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\pages\\education\\sign-language\\[slug].tsx",[],["615","616"],"C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\pages\\medicine\\article\\[slug].tsx",[],[],"C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\pages\\medicine\\news\\[slug].tsx",[],[],"C:\\Users\\Mi Note pro\\Desktop\\kanat\\effafa\\frontend\\src\\pages\\medicine\\[slug].tsx",[],[],{"ruleId":"617","severity":1,"message":"618","line":40,"column":30,"nodeType":"619","messageId":"620","endLine":40,"endColumn":33,"suggestions":"621"},{"ruleId":"617","severity":1,"message":"618","line":42,"column":40,"nodeType":"619","messageId":"620","endLine":42,"endColumn":43,"suggestions":"622"},{"ruleId":"617","severity":1,"message":"618","line":96,"column":43,"nodeType":"619","messageId":"620","endLine":96,"endColumn":46,"suggestions":"623"},{"ruleId":"617","severity":1,"message":"618","line":283,"column":74,"nodeType":"619","messageId":"620","endLine":283,"endColumn":77,"suggestions":"624"},{"ruleId":"617","severity":1,"message":"618","line":418,"column":24,"nodeType":"619","messageId":"620","endLine":418,"endColumn":27,"suggestions":"625"},{"ruleId":"617","severity":1,"message":"618","line":437,"column":24,"nodeType":"619","messageId":"620","endLine":437,"endColumn":27,"suggestions":"626"},{"ruleId":"617","severity":1,"message":"618","line":36,"column":16,"nodeType":"619","messageId":"620","endLine":36,"endColumn":19,"suggestions":"627","suppressions":"628"},{"ruleId":"617","severity":1,"message":"618","line":14,"column":36,"nodeType":"619","messageId":"620","endLine":14,"endColumn":39,"suggestions":"629"},{"ruleId":"617","severity":1,"message":"618","line":33,"column":31,"nodeType":"619","messageId":"620","endLine":33,"endColumn":34,"suggestions":"630"},{"ruleId":"631","severity":2,"message":"632","line":22,"column":9,"nodeType":"633","messageId":"634","endLine":22,"endColumn":22,"suppressions":"635"},{"ruleId":"636","severity":1,"message":"637","line":36,"column":24,"nodeType":"638","messageId":"639","endLine":36,"endColumn":32},{"ruleId":"617","severity":1,"message":"618","line":19,"column":34,"nodeType":"619","messageId":"620","endLine":19,"endColumn":37,"suggestions":"640"},{"ruleId":"617","severity":1,"message":"618","line":45,"column":45,"nodeType":"619","messageId":"620","endLine":45,"endColumn":48,"suggestions":"641"},{"ruleId":"617","severity":1,"message":"618","line":50,"column":48,"nodeType":"619","messageId":"620","endLine":50,"endColumn":51,"suggestions":"642"},{"ruleId":"636","severity":1,"message":"643","line":19,"column":49,"nodeType":"638","messageId":"639","endLine":19,"endColumn":54},{"ruleId":"617","severity":1,"message":"618","line":13,"column":14,"nodeType":"619","messageId":"620","endLine":13,"endColumn":17,"suggestions":"644","suppressions":"645"},{"ruleId":"617","severity":1,"message":"618","line":64,"column":18,"nodeType":"619","messageId":"620","endLine":64,"endColumn":21,"suggestions":"646"},{"ruleId":"617","severity":1,"message":"618","line":65,"column":14,"nodeType":"619","messageId":"620","endLine":65,"endColumn":17,"suggestions":"647"},{"ruleId":"617","severity":1,"message":"618","line":13,"column":14,"nodeType":"619","messageId":"620","endLine":13,"endColumn":17,"suggestions":"648","suppressions":"649"},{"ruleId":"617","severity":1,"message":"618","line":17,"column":78,"nodeType":"619","messageId":"620","endLine":17,"endColumn":81,"suggestions":"650"},{"ruleId":"617","severity":1,"message":"618","line":17,"column":83,"nodeType":"619","messageId":"620","endLine":17,"endColumn":86,"suggestions":"651"},{"ruleId":"652","severity":2,"message":"653","line":150,"column":9,"nodeType":"654","endLine":150,"endColumn":44,"suppressions":"655"},{"ruleId":"617","severity":1,"message":"618","line":12,"column":11,"nodeType":"619","messageId":"620","endLine":12,"endColumn":14,"suggestions":"656"},{"ruleId":"617","severity":1,"message":"618","line":23,"column":56,"nodeType":"619","messageId":"620","endLine":23,"endColumn":59,"suggestions":"657"},{"ruleId":"617","severity":1,"message":"618","line":23,"column":61,"nodeType":"619","messageId":"620","endLine":23,"endColumn":64,"suggestions":"658"},{"ruleId":"617","severity":1,"message":"618","line":6,"column":19,"nodeType":"619","messageId":"620","endLine":6,"endColumn":22,"suggestions":"659","suppressions":"660"},{"ruleId":"617","severity":1,"message":"618","line":12,"column":46,"nodeType":"619","messageId":"620","endLine":12,"endColumn":49,"suggestions":"661","suppressions":"662"},{"ruleId":"617","severity":1,"message":"618","line":6,"column":10,"nodeType":"619","messageId":"620","endLine":6,"endColumn":13,"suggestions":"663"},{"ruleId":"617","severity":1,"message":"618","line":13,"column":37,"nodeType":"619","messageId":"620","endLine":13,"endColumn":40,"suggestions":"664"},{"ruleId":"652","severity":2,"message":"653","line":45,"column":7,"nodeType":"654","endLine":45,"endColumn":66,"suppressions":"665"},{"ruleId":"617","severity":1,"message":"618","line":4,"column":20,"nodeType":"619","messageId":"620","endLine":4,"endColumn":23,"suggestions":"666"},{"ruleId":"617","severity":1,"message":"618","line":26,"column":32,"nodeType":"619","messageId":"620","endLine":26,"endColumn":35,"suggestions":"667"},{"ruleId":"617","severity":1,"message":"618","line":4,"column":36,"nodeType":"619","messageId":"620","endLine":4,"endColumn":39,"suggestions":"668","suppressions":"669"},{"ruleId":"617","severity":1,"message":"618","line":14,"column":34,"nodeType":"619","messageId":"620","endLine":14,"endColumn":37,"suggestions":"670","suppressions":"671"},{"ruleId":"617","severity":1,"message":"618","line":14,"column":45,"nodeType":"619","messageId":"620","endLine":14,"endColumn":48,"suggestions":"672","suppressions":"673"},{"ruleId":"617","severity":1,"message":"618","line":60,"column":45,"nodeType":"619","messageId":"620","endLine":60,"endColumn":48,"suggestions":"674"},{"ruleId":"617","severity":1,"message":"618","line":155,"column":81,"nodeType":"619","messageId":"620","endLine":155,"endColumn":84,"suggestions":"675"},{"ruleId":"617","severity":1,"message":"618","line":54,"column":45,"nodeType":"619","messageId":"620","endLine":54,"endColumn":48,"suggestions":"676"},{"ruleId":"617","severity":1,"message":"618","line":131,"column":81,"nodeType":"619","messageId":"620","endLine":131,"endColumn":84,"suggestions":"677"},{"ruleId":"631","severity":2,"message":"632","line":2,"column":1,"nodeType":"633","messageId":"634","endLine":2,"endColumn":14,"suppressions":"678"},{"ruleId":"617","severity":1,"message":"618","line":22,"column":25,"nodeType":"619","messageId":"620","endLine":22,"endColumn":28,"suggestions":"679"},{"ruleId":"636","severity":1,"message":"680","line":34,"column":3,"nodeType":"638","messageId":"639","endLine":34,"endColumn":13},{"ruleId":"617","severity":1,"message":"618","line":13,"column":14,"nodeType":"619","messageId":"620","endLine":13,"endColumn":17,"suggestions":"681","suppressions":"682"},{"ruleId":"617","severity":1,"message":"618","line":20,"column":18,"nodeType":"619","messageId":"620","endLine":20,"endColumn":21,"suggestions":"683","suppressions":"684"},{"ruleId":"617","severity":1,"message":"618","line":21,"column":16,"nodeType":"619","messageId":"620","endLine":21,"endColumn":19,"suggestions":"685","suppressions":"686"},{"ruleId":"617","severity":1,"message":"618","line":70,"column":53,"nodeType":"619","messageId":"620","endLine":70,"endColumn":56,"suggestions":"687","suppressions":"688"},{"ruleId":"617","severity":1,"message":"618","line":45,"column":38,"nodeType":"619","messageId":"620","endLine":45,"endColumn":41,"suggestions":"689","suppressions":"690"},{"ruleId":"617","severity":1,"message":"618","line":111,"column":34,"nodeType":"619","messageId":"620","endLine":111,"endColumn":37,"suggestions":"691","suppressions":"692"},"@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["693","694"],["695","696"],["697","698"],["699","700"],["701","702"],["703","704"],["705","706"],["707"],["708","709"],["710","711"],"@typescript-eslint/ban-ts-comment","Do not use \"@ts-ignore\" because it alters compilation errors.","Line","tsDirectiveComment",["712"],"@typescript-eslint/no-unused-vars","'children' is defined but never used.","Identifier","unusedVar",["713","714"],["715","716"],["717","718"],"'value' is defined but never used.",["719","720"],["721"],["722","723"],["724","725"],["726","727"],["728"],["729","730"],["731","732"],"jsx-a11y/media-has-caption","Media elements such as <audio> and <video> must have a <track> for captions.","JSXOpeningElement",["733"],["734","735"],["736","737"],["738","739"],["740","741"],["742"],["743","744"],["745"],["746","747"],["748","749"],["750"],["751","752"],["753","754"],["755","756"],["757"],["758","759"],["760"],["761","762"],["763"],["764","765"],["766","767"],["768","769"],["770","771"],["772"],["773","774"],"'fontWeight' is defined but never used.",["775","776"],["777"],["778","779"],["780"],["781","782"],["783"],["784","785"],["786"],["787","788"],["789"],["790","791"],["792"],{"messageId":"793","fix":"794","desc":"795"},{"messageId":"796","fix":"797","desc":"798"},{"messageId":"793","fix":"799","desc":"795"},{"messageId":"796","fix":"800","desc":"798"},{"messageId":"793","fix":"801","desc":"795"},{"messageId":"796","fix":"802","desc":"798"},{"messageId":"793","fix":"803","desc":"795"},{"messageId":"796","fix":"804","desc":"798"},{"messageId":"793","fix":"805","desc":"795"},{"messageId":"796","fix":"806","desc":"798"},{"messageId":"793","fix":"807","desc":"795"},{"messageId":"796","fix":"808","desc":"798"},{"messageId":"793","fix":"809","desc":"795"},{"messageId":"796","fix":"810","desc":"798"},{"kind":"811","justification":"812"},{"messageId":"793","fix":"813","desc":"795"},{"messageId":"796","fix":"814","desc":"798"},{"messageId":"793","fix":"815","desc":"795"},{"messageId":"796","fix":"816","desc":"798"},{"kind":"811","justification":"812"},{"messageId":"793","fix":"817","desc":"795"},{"messageId":"796","fix":"818","desc":"798"},{"messageId":"793","fix":"819","desc":"795"},{"messageId":"796","fix":"820","desc":"798"},{"messageId":"793","fix":"821","desc":"795"},{"messageId":"796","fix":"822","desc":"798"},{"messageId":"793","fix":"823","desc":"795"},{"messageId":"796","fix":"824","desc":"798"},{"kind":"811","justification":"812"},{"messageId":"793","fix":"825","desc":"795"},{"messageId":"796","fix":"826","desc":"798"},{"messageId":"793","fix":"827","desc":"795"},{"messageId":"796","fix":"828","desc":"798"},{"messageId":"793","fix":"829","desc":"795"},{"messageId":"796","fix":"830","desc":"798"},{"kind":"811","justification":"812"},{"messageId":"793","fix":"831","desc":"795"},{"messageId":"796","fix":"832","desc":"798"},{"messageId":"793","fix":"833","desc":"795"},{"messageId":"796","fix":"834","desc":"798"},{"kind":"811","justification":"812"},{"messageId":"793","fix":"835","desc":"795"},{"messageId":"796","fix":"836","desc":"798"},{"messageId":"793","fix":"837","desc":"795"},{"messageId":"796","fix":"838","desc":"798"},{"messageId":"793","fix":"839","desc":"795"},{"messageId":"796","fix":"840","desc":"798"},{"messageId":"793","fix":"841","desc":"795"},{"messageId":"796","fix":"842","desc":"798"},{"kind":"811","justification":"812"},{"messageId":"793","fix":"843","desc":"795"},{"messageId":"796","fix":"844","desc":"798"},{"kind":"811","justification":"812"},{"messageId":"793","fix":"845","desc":"795"},{"messageId":"796","fix":"846","desc":"798"},{"messageId":"793","fix":"847","desc":"795"},{"messageId":"796","fix":"848","desc":"798"},{"kind":"811","justification":"812"},{"messageId":"793","fix":"849","desc":"795"},{"messageId":"796","fix":"850","desc":"798"},{"messageId":"793","fix":"851","desc":"795"},{"messageId":"796","fix":"852","desc":"798"},{"messageId":"793","fix":"853","desc":"795"},{"messageId":"796","fix":"854","desc":"798"},{"kind":"811","justification":"812"},{"messageId":"793","fix":"855","desc":"795"},{"messageId":"796","fix":"856","desc":"798"},{"kind":"811","justification":"812"},{"messageId":"793","fix":"857","desc":"795"},{"messageId":"796","fix":"858","desc":"798"},{"kind":"811","justification":"812"},{"messageId":"793","fix":"859","desc":"795"},{"messageId":"796","fix":"860","desc":"798"},{"messageId":"793","fix":"861","desc":"795"},{"messageId":"796","fix":"862","desc":"798"},{"messageId":"793","fix":"863","desc":"795"},{"messageId":"796","fix":"864","desc":"798"},{"messageId":"793","fix":"865","desc":"795"},{"messageId":"796","fix":"866","desc":"798"},{"kind":"811","justification":"812"},{"messageId":"793","fix":"867","desc":"795"},{"messageId":"796","fix":"868","desc":"798"},{"messageId":"793","fix":"869","desc":"795"},{"messageId":"796","fix":"870","desc":"798"},{"kind":"811","justification":"812"},{"messageId":"793","fix":"871","desc":"795"},{"messageId":"796","fix":"872","desc":"798"},{"kind":"811","justification":"812"},{"messageId":"793","fix":"873","desc":"795"},{"messageId":"796","fix":"874","desc":"798"},{"kind":"811","justification":"812"},{"messageId":"793","fix":"875","desc":"795"},{"messageId":"796","fix":"876","desc":"798"},{"kind":"811","justification":"812"},{"messageId":"793","fix":"877","desc":"795"},{"messageId":"796","fix":"878","desc":"798"},{"kind":"811","justification":"812"},{"messageId":"793","fix":"879","desc":"795"},{"messageId":"796","fix":"880","desc":"798"},{"kind":"811","justification":"812"},"suggestUnknown",{"range":"881","text":"882"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"883","text":"884"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"885","text":"882"},{"range":"886","text":"884"},{"range":"887","text":"882"},{"range":"888","text":"884"},{"range":"889","text":"882"},{"range":"890","text":"884"},{"range":"891","text":"882"},{"range":"892","text":"884"},{"range":"893","text":"882"},{"range":"894","text":"884"},{"range":"895","text":"882"},{"range":"896","text":"884"},"directive","",{"range":"897","text":"882"},{"range":"898","text":"884"},{"range":"899","text":"882"},{"range":"900","text":"884"},{"range":"901","text":"882"},{"range":"902","text":"884"},{"range":"903","text":"882"},{"range":"904","text":"884"},{"range":"905","text":"882"},{"range":"906","text":"884"},{"range":"907","text":"882"},{"range":"908","text":"884"},{"range":"909","text":"882"},{"range":"910","text":"884"},{"range":"911","text":"882"},{"range":"912","text":"884"},{"range":"913","text":"882"},{"range":"914","text":"884"},{"range":"915","text":"882"},{"range":"916","text":"884"},{"range":"917","text":"882"},{"range":"918","text":"884"},{"range":"919","text":"882"},{"range":"920","text":"884"},{"range":"921","text":"882"},{"range":"922","text":"884"},{"range":"923","text":"882"},{"range":"924","text":"884"},{"range":"925","text":"882"},{"range":"926","text":"884"},{"range":"927","text":"882"},{"range":"928","text":"884"},{"range":"929","text":"882"},{"range":"930","text":"884"},{"range":"931","text":"882"},{"range":"932","text":"884"},{"range":"933","text":"882"},{"range":"934","text":"884"},{"range":"935","text":"882"},{"range":"936","text":"884"},{"range":"937","text":"882"},{"range":"938","text":"884"},{"range":"939","text":"882"},{"range":"940","text":"884"},{"range":"941","text":"882"},{"range":"942","text":"884"},{"range":"943","text":"882"},{"range":"944","text":"884"},{"range":"945","text":"882"},{"range":"946","text":"884"},{"range":"947","text":"882"},{"range":"948","text":"884"},{"range":"949","text":"882"},{"range":"950","text":"884"},{"range":"951","text":"882"},{"range":"952","text":"884"},{"range":"953","text":"882"},{"range":"954","text":"884"},{"range":"955","text":"882"},{"range":"956","text":"884"},{"range":"957","text":"882"},{"range":"958","text":"884"},{"range":"959","text":"882"},{"range":"960","text":"884"},{"range":"961","text":"882"},{"range":"962","text":"884"},{"range":"963","text":"882"},{"range":"964","text":"884"},[1899,1902],"unknown",[1899,1902],"never",[1969,1972],[1969,1972],[3370,3373],[3370,3373],[10646,10649],[10646,10649],[13612,13615],[13612,13615],[14035,14038],[14035,14038],[1280,1283],[1280,1283],[547,550],[547,550],[1083,1086],[1083,1086],[838,841],[838,841],[1984,1987],[1984,1987],[2136,2139],[2136,2139],[484,487],[484,487],[2469,2472],[2469,2472],[2556,2559],[2556,2559],[484,487],[484,487],[607,610],[607,610],[612,615],[612,615],[479,482],[479,482],[905,908],[905,908],[910,913],[910,913],[217,220],[217,220],[453,456],[453,456],[186,189],[186,189],[511,514],[511,514],[74,77],[74,77],[991,994],[991,994],[128,131],[128,131],[444,447],[444,447],[455,458],[455,458],[2256,2259],[2256,2259],[5592,5595],[5592,5595],[2601,2604],[2601,2604],[4574,4577],[4574,4577],[453,456],[453,456],[472,475],[472,475],[654,657],[654,657],[673,676],[673,676],[1898,1901],[1898,1901],[1893,1896],[1893,1896],[3831,3834],[3831,3834]]